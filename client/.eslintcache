[{"/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/index.js":"1","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/App.js":"2","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/store.js":"3","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/utils/setAuthToken.js":"4","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/actions/auth.js":"5","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/auth/Login.js":"6","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/layout/Landing.js":"7","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/layout/Navbar.js":"8","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/dashboard/Dashboard.js":"9","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/profile/Profile.js":"10","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/profile-forms/CreateProfile.js":"11","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/profile-forms/EditProfile.js":"12","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/posts/Posts.js":"13","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/profiles/Profiles.js":"14","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/profile-forms/AddExperience.js":"15","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/profile-forms/AddEducation.js":"16","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/auth/Register.js":"17","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/layout/Alert.js":"18","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/routing/PrivateRoute.js":"19","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/post/Post.js":"20","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/actions/types.js":"21","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/actions/alert.js":"22","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/dashboard/DashboardActions.js":"23","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/actions/profile.js":"24","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/dashboard/Education.js":"25","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/layout/Spinner.js":"26","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/profile/ProfileTop.js":"27","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/profile/ProfileExperience.js":"28","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/dashboard/Experience.js":"29","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/profile/ProfileAbout.js":"30","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/profile/ProfileEducation.js":"31","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/posts/PostForm.js":"32","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/profile/ProfileGithub.js":"33","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/posts/PostItem.js":"34","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/actions/post.js":"35","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/post/CommentItem.js":"36","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/post/CommentForm.js":"37","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/profiles/ProfileItem.js":"38","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/reducers/index.js":"39","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/reducers/auth.js":"40","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/reducers/alert.js":"41","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/reducers/profile.js":"42","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/reducers/post.js":"43","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/auth/FacebookLogin.js":"44","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/auth/GmailLogin.js":"45","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/auth/PrivacyNotice.js":"46","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/auth/FinishRegister.js":"47","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/auth/FacebookReLogin.js":"48","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/auth/Contact.js":"49","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/auth/TwoFactorConfirmation.js":"50","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/auth/TwoFactorLoginConfirmation.js":"51","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/auth/GmalReLogin.js":"52","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/auth/Donations.js":"53","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/auth/PayPal.js":"54","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/profile-forms/EditPicture.js":"55","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/auth/Admin.js":"56","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/auth/AdminProfileItem.js":"57"},{"size":216,"mtime":1615233913708,"results":"58","hashOfConfig":"59"},{"size":4138,"mtime":1615233816692,"results":"60","hashOfConfig":"59"},{"size":383,"mtime":1611566237888,"results":"61","hashOfConfig":"59"},{"size":242,"mtime":1611636702294,"results":"62","hashOfConfig":"59"},{"size":6126,"mtime":1615141438943,"results":"63","hashOfConfig":"59"},{"size":6452,"mtime":1615334252381,"results":"64","hashOfConfig":"59"},{"size":1177,"mtime":1611873463829,"results":"65","hashOfConfig":"59"},{"size":1841,"mtime":1615156165840,"results":"66","hashOfConfig":"59"},{"size":3831,"mtime":1615334864766,"results":"67","hashOfConfig":"59"},{"size":2968,"mtime":1615144617185,"results":"68","hashOfConfig":"59"},{"size":6812,"mtime":1611878277294,"results":"69","hashOfConfig":"59"},{"size":13800,"mtime":1614129174735,"results":"70","hashOfConfig":"59"},{"size":1083,"mtime":1612218765195,"results":"71","hashOfConfig":"59"},{"size":1307,"mtime":1612132378693,"results":"72","hashOfConfig":"59"},{"size":3473,"mtime":1612057079834,"results":"73","hashOfConfig":"59"},{"size":3532,"mtime":1612057062796,"results":"74","hashOfConfig":"59"},{"size":11913,"mtime":1615334198737,"results":"75","hashOfConfig":"59"},{"size":441,"mtime":1611569741976,"results":"76","hashOfConfig":"59"},{"size":631,"mtime":1611814129407,"results":"77","hashOfConfig":"59"},{"size":1183,"mtime":1612237102867,"results":"78","hashOfConfig":"59"},{"size":1774,"mtime":1615156108068,"results":"79","hashOfConfig":"59"},{"size":345,"mtime":1611568721177,"results":"80","hashOfConfig":"59"},{"size":795,"mtime":1614665793323,"results":"81","hashOfConfig":"59"},{"size":6077,"mtime":1615156765669,"results":"82","hashOfConfig":"59"},{"size":1382,"mtime":1612053109691,"results":"83","hashOfConfig":"59"},{"size":235,"mtime":1611873755018,"results":"84","hashOfConfig":"59"},{"size":1814,"mtime":1615144661685,"results":"85","hashOfConfig":"59"},{"size":767,"mtime":1612236905887,"results":"86","hashOfConfig":"59"},{"size":1396,"mtime":1612052985207,"results":"87","hashOfConfig":"59"},{"size":813,"mtime":1612121449840,"results":"88","hashOfConfig":"59"},{"size":775,"mtime":1612236891354,"results":"89","hashOfConfig":"59"},{"size":982,"mtime":1612218861257,"results":"90","hashOfConfig":"59"},{"size":1486,"mtime":1612236422794,"results":"91","hashOfConfig":"59"},{"size":2357,"mtime":1612827264304,"results":"92","hashOfConfig":"59"},{"size":3583,"mtime":1612225645990,"results":"93","hashOfConfig":"59"},{"size":1371,"mtime":1612827167658,"results":"94","hashOfConfig":"59"},{"size":1021,"mtime":1612220635807,"results":"95","hashOfConfig":"59"},{"size":1040,"mtime":1615144549762,"results":"96","hashOfConfig":"59"},{"size":231,"mtime":1612214497296,"results":"97","hashOfConfig":"59"},{"size":2576,"mtime":1614030828374,"results":"98","hashOfConfig":"59"},{"size":375,"mtime":1611566943014,"results":"99","hashOfConfig":"59"},{"size":1055,"mtime":1612236780027,"results":"100","hashOfConfig":"59"},{"size":1702,"mtime":1612220393876,"results":"101","hashOfConfig":"59"},{"size":1968,"mtime":1615149389415,"results":"102","hashOfConfig":"59"},{"size":504,"mtime":1613427450772,"results":"103","hashOfConfig":"59"},{"size":3410,"mtime":1612900485309,"results":"104","hashOfConfig":"59"},{"size":4603,"mtime":1615149372732,"results":"105","hashOfConfig":"59"},{"size":1730,"mtime":1612992449631,"results":"106","hashOfConfig":"59"},{"size":4169,"mtime":1615334955621,"results":"107","hashOfConfig":"59"},{"size":3798,"mtime":1614023456467,"results":"108","hashOfConfig":"59"},{"size":3602,"mtime":1614672179886,"results":"109","hashOfConfig":"59"},{"size":1894,"mtime":1614033329663,"results":"110","hashOfConfig":"59"},{"size":3142,"mtime":1615336313934,"results":"111","hashOfConfig":"59"},{"size":928,"mtime":1614660991042,"results":"112","hashOfConfig":"59"},{"size":3954,"mtime":1615154450209,"results":"113","hashOfConfig":"59"},{"size":1415,"mtime":1615155918403,"results":"114","hashOfConfig":"59"},{"size":1523,"mtime":1615157091578,"results":"115","hashOfConfig":"59"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},"193mvv7",{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"118"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"118"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"118"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"118"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"118"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"118"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"118"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"118"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"118"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"118"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"118"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"118"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"118"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"118"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"118"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"118"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"118"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"118"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"118"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"118"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"118"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"118"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"118"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"118"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"118"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"118"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"118"},"/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/index.js",[],["258","259"],"/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/App.js",[],"/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/store.js",[],"/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/utils/setAuthToken.js",[],"/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/actions/auth.js",["260","261","262","263","264","265"],"import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_PROFILE,\n  RECAPTCHA_APPROVED,\n  RECAPTCHA_DENIED,\n  FACEBOOK_REGISTER_ATTEMPTED,\n  RECAPTCHA_EXPIRED,\n  CONTACT_MESSAGE_SENT,\n  TWO_FACTOR_ATTEMPTED,\n  TWO_FACTOR_SUCCESS,\n  TWO_FACTOR_FAILED,\n  WELCOME_EMAIL_SENT,\n  GOOGLE_REGISTER_ATTEMPTED,\n  WELCOME_EMAIL_FAILED,\n} from './types';\nimport setAuthToken from '../utils/setAuthToken';\nimport { Fragment } from 'react';\n\n// Load User\nexport const loadUser = () => async (dispatch) => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get('/api/auth');\n\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR,\n    });\n  }\n};\n\nexport const attemptFacebook = () => (dispatch) => {\n  dispatch({\n    type: FACEBOOK_REGISTER_ATTEMPTED,\n  });\n};\n\n// Register User\nexport const register = (\n  name,\n  email,\n  password,\n  phoneNumber,\n  type,\n  id\n) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  if (type == 'facebook') {\n    dispatch({\n      type: FACEBOOK_REGISTER_ATTEMPTED,\n    });\n  } else if (type == 'google') {\n    dispatch({\n      type: GOOGLE_REGISTER_ATTEMPTED,\n    });\n  }\n  var body;\n  if (!password) {\n    password = id;\n    body = JSON.stringify({ name, email, password, phoneNumber, type, id });\n  } else {\n    body = JSON.stringify({ name, email, password, phoneNumber, type });\n  }\n\n  try {\n    const res = await axios.post('/api/users', body, config);\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data,\n    });\n\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL,\n    });\n  }\n};\n\n// Check if user is human\nexport const reCaptchaCheck = (value) => async (dispatch) => {\n  const body = { value: value };\n\n  try {\n    await axios.post('/api/recaptcha', body);\n\n    dispatch({\n      type: RECAPTCHA_APPROVED,\n    });\n  } catch (err) {\n    dispatch({\n      type: RECAPTCHA_DENIED,\n    });\n  }\n};\n\nexport const dispatchExpireCaptcha = () => (dispatch) => {\n  dispatch({\n    type: RECAPTCHA_EXPIRED,\n  });\n};\n\n// Login User\nexport const login = (email, password, id) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  var body;\n  if (!id) {\n    body = JSON.stringify({ email, password });\n  } else {\n    password = id;\n    body = JSON.stringify({ email, password });\n  }\n\n  try {\n    const res = await axios.post('/api/auth', body, config);\n    // const res = await axios.post('/api/auth', body);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data,\n    });\n\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: LOGIN_FAIL,\n    });\n  }\n};\n\nexport const sendTextMessage = (name, phoneNumber, message) => async (\n  dispatch\n) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  var body;\n  body = JSON.stringify({ name, phoneNumber, message });\n\n  try {\n    await axios.post('/api/textmessage', body, config);\n    dispatch({\n      type: CONTACT_MESSAGE_SENT,\n    });\n\n    // dispatch(setAlert('Text message sent'));\n  } catch (err) {\n    const errors = err.response.data.errors;\n  }\n};\n\nexport const twoFactorAuth = (email, phoneNumber) => async (dispatch) => {\n  const body = { email: email, phoneNumber: phoneNumber };\n\n  dispatch({\n    type: TWO_FACTOR_ATTEMPTED,\n  });\n  try {\n    await axios.post('/api/twofa', body);\n    dispatch({\n      type: CONTACT_MESSAGE_SENT,\n    });\n\n    // dispatch(setAlert('Text message sent'));\n  } catch (err) {\n    const errors = err.response.data.errors;\n  }\n};\n\nexport const twoFactorAuthCheck = (email, code) => async (dispatch) => {\n  const body = { email, code };\n\n  try {\n    await axios.post('/api/twofa/verify', body);\n    dispatch({\n      type: TWO_FACTOR_SUCCESS,\n    });\n    return true;\n\n    // dispatch(setAlert('Text message sent'));\n  } catch (err) {\n    dispatch({\n      type: TWO_FACTOR_FAILED,\n    });\n    return false;\n    // const errors = err.response.data.errors;\n  }\n};\n\nexport const dispatchTwoFactorAuth = (code) => async (dispatch) => {\n  // const body = { code: code };\n  dispatch({\n    type: TWO_FACTOR_ATTEMPTED,\n  });\n};\n\nexport const attemptGoogle = () => (dispatch) => {\n  dispatch({\n    type: GOOGLE_REGISTER_ATTEMPTED,\n  });\n};\n\n// Logout / Clear Profile\nexport const logout = () => (dispatch) => {\n  dispatch({ type: CLEAR_PROFILE });\n  dispatch({ type: LOGOUT });\n};\n\nexport const sendWelcomeEmail = (email, name) => async (dispatch) => {\n  const body = { email, name };\n  try {\n    await axios.post('/api/email/welcome', body);\n    dispatch({\n      type: WELCOME_EMAIL_SENT,\n    });\n    console.log('sending welcome email...');\n    sendWelcomeEmail(email, name);\n    return true;\n\n    // dispatch(setAlert('Text message sent'));\n  } catch (err) {\n    dispatch({\n      type: WELCOME_EMAIL_FAILED,\n    });\n    return false;\n    // const errors = err.response.data.errors;\n  }\n};\n\nexport const uploadProfilePicture = (file, id) => async (dispatch) => {\n  try {\n    var result = await axios.get('/api/image');\n    console.log(result.data);\n    const response = await fetch(result.data, {\n      method: 'PUT', // *GET, POST, PUT, DELETE, etc.\n      headers: {\n      'Cache-Control': 'no-store max-age=0',\n      'Content-Type': file[0].type,\n      'x-ms-date': new Date().toUTCString(),\n      'x-ms-version': '2020-04-08',\n      'x-ms-blob-type': 'BlockBlob'\n      },\n      body: file[0], // body data type must match \"Content-Type\" header\n    });\n    await axios.post('/api/image');\n  } catch (error) {\n    console.log(error);\n  }\n};","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/auth/Login.js",["266","267","268","269","270","271","272","273","274"],"// rafc creates react component\nimport React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  login,\n  dispatchExpireCaptcha,\n  dispatchTwoFactorAuth,\n} from '../../actions/auth';\nimport FacebookReLogin from './FacebookReLogin';\nimport GmailReLogin from './GmalReLogin';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport { reCaptchaCheck } from '../../actions/auth';\nimport { setAlert } from '../../actions/alert';\nimport TwoFactorLoginConfirmation from './TwoFactorLoginConfirmation';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport { Widget, addResponseMessage, addLinkSnippet, addUserMessage } from 'react-chat-widget';\nimport 'react-chat-widget/lib/styles.css';\n\nexport const Login = ({\n  login,\n  isAuthenticated,\n  facebookAttempted,\n  twoFactorAttempted,\n  googleAttempted,\n  recaptchaApproved,\n  dispatchExpireCaptcha,\n  dispatchTwoFactorAuth,\n  reCaptchaCheck,\n  setAlert,\n  auth: { user },\n}) => {\n  if (facebookAttempted) {\n    window.location.reload();\n  }\n  // } else if (twoFactorAttempted) {\n  //   window.location.reload();\n  // }\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  });\n\n  const handleNewUserMessage = (newMessage) => {\n    if (newMessage == 'hello') {\n      addResponseMessage(`Hello there!`)\n    } else if (newMessage == 'help') {\n      addResponseMessage(\n        'Thank you for contacting us. Here are your options: \\nPress 1 to here how our site works \\nPress 2 if you are having a problem with your account \\nPress 3 to speak to a live representative'\n      )\n    } else if (newMessage == '1') {\n      addResponseMessage('Developer connect is a social media site that allows developers across the world to connect with one another as well as share their work and find partners for new endevours.')\n    }\n    console.log(`New message incoming! ${newMessage}`);\n    // Now send the message throught the backend API\n  };\n\n  const { email, password } = formData;\n\n  var human = recaptchaApproved;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (human == false) {\n      setAlert('Please verify you are human', 'danger');\n    } else {\n      await login(email, password, null);\n      // if (!facebookAttempted && !googleAttempted) {\n      //   dispatchTwoFactorAuth();\n      // }\n    }\n    // }\n  };\n\n  const verifyCaptcha = (response) => {\n    reCaptchaCheck(response);\n  };\n\n  const expireCaptcha = () => {\n    dispatchExpireCaptcha();\n    setFormData({ ...formData, human: false });\n  };\n\n  // Redirect if logged in\n  if (isAuthenticated) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  return (\n    <Fragment>\n      {/* {!isAuthenticated || facebookAttempted || googleAttempted ? ( */}\n      <Fragment>\n        <h1 className=\"large text-primary\">Login</h1>\n        <p className=\"lead\">\n          <i className=\"fas fa-user\"></i> Sign Into Your Account\n        </p>\n        <Tabs>\n          <TabList>\n            <Tab>Login With Site Account</Tab>\n            <Tab>Login With Facebook</Tab>\n            <Tab>Login With Google</Tab>\n          </TabList>\n          <TabPanel>\n            <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\n              <div className=\"form-group\">\n                <input\n                  type=\"email\"\n                  placeholder=\"Email Address\"\n                  name=\"email\"\n                  value={email}\n                  onChange={(e) => onChange(e)}\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  minLength=\"6\"\n                  value={password}\n                  onChange={(e) => onChange(e)}\n                  required\n                />\n              </div>\n              <ReCAPTCHA\n                sitekey=\"6Le2z0oaAAAAABG-NkcbHXAHv03pkxHdwRzak2IA\"\n                render=\"explicit\"\n                onChange={verifyCaptcha}\n                onExpired={expireCaptcha}\n              />\n              <br></br>\n              <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\n            </form>\n          </TabPanel>\n          <TabPanel>\n            <ReCAPTCHA\n              sitekey=\"6Le2z0oaAAAAABG-NkcbHXAHv03pkxHdwRzak2IA\"\n              render=\"explicit\"\n              onChange={verifyCaptcha}\n              onExpired={expireCaptcha}\n            />\n            <br></br>\n            <FacebookReLogin />\n          </TabPanel>\n          <TabPanel>\n            <ReCAPTCHA\n              sitekey=\"6Le2z0oaAAAAABG-NkcbHXAHv03pkxHdwRzak2IA\"\n              render=\"explicit\"\n              onChange={verifyCaptcha}\n              onExpired={expireCaptcha}\n            />\n            <br></br>\n            <GmailReLogin />\n          </TabPanel>\n        </Tabs>\n        <br></br>\n        <p className=\"my-1\">\n          Don't have an account? <Link to=\"/register\">Sign Up</Link>\n        </p>\n      </Fragment>\n      {/* ) : (\n        // <Fragment />\n        <TwoFactorLoginConfirmation email={email} />\n      )} */}\n      {/* <Widget\n          handleNewUserMessage={handleNewUserMessage}\n          // profileAvatar={logo}\n          title=\"Have a question?\"\n          subtitle=\"We are here to help!\"\n        /> */}\n    </Fragment>\n  );\n};\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n  facebookAttempted: PropTypes.bool,\n  reCaptchaCheck: PropTypes.func.isRequired,\n  dispatchExpireCaptcha: PropTypes.func.isRequired,\n  dispatchTwoFactorAuth: PropTypes.func.isRequired,\n  recaptchaApproved: PropTypes.bool,\n  setAlert: PropTypes.func.isRequired,\n  twoFactorAttempted: PropTypes.bool,\n  googleAttemped: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  facebookAttempted: state.auth.facebookAttempted,\n  recaptchaApproved: state.auth.recaptchaApproved,\n  twoFactorAttempted: state.auth.twoFactorAttempted,\n  googleAttempted: state.auth.googleAttempted,\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, {\n  login,\n  reCaptchaCheck,\n  dispatchExpireCaptcha,\n  setAlert,\n  dispatchTwoFactorAuth,\n})(Login);\n","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/layout/Landing.js",[],"/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/layout/Navbar.js",["275"],"import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { logout } from '../../actions/auth';\n\nexport const Navbar = ({ auth: { isAuthenticated, loading, user }, logout }) => {\n  const authLinks = (\n    <ul>\n      <li>\n        <Link to=\"/profiles\">Developers</Link>\n      </li>\n      <li>\n        <Link to=\"/posts\">Posts</Link>\n      </li>\n      <li>\n        <Link to=\"/contact\">Contact Us</Link>\n      </li>\n      <li>\n        <Link to=\"/donations\">Donate</Link>\n      </li>\n      { user && user._id == \"601107dc69e4e177ba3d4234\" &&\n        <li>\n          <Link to=\"/admin\">Admin</Link>\n        </li>\n      }\n      <li>\n        <Link to=\"/dashboard\">\n          <i className=\"fas fa-user\"></i>{' '}\n          <span className=\"hide-sm\">Dashboard</span>\n        </Link>\n      </li>\n      <li>\n        <a onClick={logout} href=\"#!\">\n          <i className=\"fas fa-sign-out-alt\"></i>{' '}\n          <span className=\"hide-sm\">Logout</span>\n        </a>\n      </li>\n    </ul>\n  );\n\n  const guestLinks = (\n    <ul>\n      <li>\n        <Link to=\"/profiles\">Developers</Link>\n      </li>\n      <li>\n        <Link to=\"/register\">Register</Link>\n      </li>\n      <li>\n        <Link to=\"/login\">Login</Link>\n      </li>\n    </ul>\n  );\n\n  return (\n    <nav className=\"navbar bg-dark\">\n      <h1>\n        <Link to=\"/\">\n          <i className=\"fas fa-code\"></i> DevConnector\n        </Link>\n      </h1>\n      {!loading && (\n        <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\n      )}\n    </nav>\n  );\n};\n\nNavbar.propTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { logout })(Navbar);\n","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/dashboard/Dashboard.js",["276","277","278","279","280","281","282","283"],"import React, { useEffect, Fragment, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport DashboardActions from './DashboardActions';\nimport Experience from './Experience';\nimport Education from './Education';\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile';\nimport { CometChat } from \"@cometchat-pro/chat\"\nimport { Widget, addResponseMessage, addLinkSnippet, addUserMessage } from 'react-chat-widget';\nimport 'react-chat-widget/lib/styles.css';\n\nconst Dashboard = ({\n  getCurrentProfile,\n  deleteAccount,\n  auth: { user },\n  profile: { profile, loading },\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, [getCurrentProfile]);\n\n  const [help, setHelp] = useState(false);\n\n  const handleNewUserMessage = (newMessage) => {\n    if (newMessage == 'hello') {\n      addResponseMessage(`Hello there, ${user.name}!`)\n      setHelp(false);\n    } else if (newMessage == 'help') {\n      addResponseMessage(\n        'Thank you for contacting us. Here are your options: \\nPress 1 to here how our site works, \\nPress 2 if you would like to leave us a message with your problem.'\n      )\n      setHelp(false);\n    } else if (newMessage == '1') {\n      addResponseMessage('Developer connect is a social media site that allows developers across the world to connect with one another as well as share their work and find partners for new endevours.')\n      setHelp(false);\n    } else if (newMessage == '2') {\n      setHelp(true);\n      addResponseMessage(`Please describe your problem, and we will get back to you as soon as we can!`);\n    } else {\n      if (help == true) {\n        addResponseMessage(`Your message has been submitted. Thank you!`);\n        setHelp(false);\n      } else {\n        setHelp(false);\n        addResponseMessage('Your message is unrecognized. Please type hello or help. Thank you!')\n      }\n    }\n    console.log(`New message incoming! ${newMessage}`);\n    // Now send the message throught the backend API\n  };\n\n  return loading && profile === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <h1 className=\"large text-primary\">Dashboard</h1>\n      <img\n        src={user.avatar}\n        alt=\"user avatar\"\n        // className=\"round-img\"\n        style={{ maxWidth: '130px', border: \"2px solid black\" }}\n      />\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Welcome {user && user.name}\n      </p>\n      {profile !== null ? (\n        <Fragment>\n          <DashboardActions />\n\n          <Experience experience={profile.experience} />\n          <Education education={profile.education} />\n          <div className=\"my-w\">\n            <button className=\"btn btn-danger\" onClick={() => deleteAccount()}>\n              <i className=\"fas fa-user-minus\"></i> Delete My Account\n            </button>\n          </div>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <p>You have not yet setup a profile, please add some info</p>\n          <Link to=\"create-profile\" className=\"btn btn-primary my-1\">\n            Create Profile\n          </Link>\n        </Fragment>\n      )}\n      <Widget\n          handleNewUserMessage={handleNewUserMessage}\n          // profileAvatar={logo}\n          title=\"Have a question?\"\n          subtitle=\"We are here to help!\"\n          senderPlaceHolder=\"Type hello or help...\"\n        />\n    </Fragment>\n  );\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(\n  Dashboard\n);\n","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/profile/Profile.js",[],"/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/profile-forms/CreateProfile.js",[],"/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/profile-forms/EditProfile.js",["284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313"],"import React, { Fragment, useState, useEffect, useMemo } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\nimport { setAlert } from '../../actions/alert';\nimport Select from 'react-select';\nimport countryList from 'react-select-country-list';\n// import { options } from '../../../../routes/api/auth';\n\nconst EditProfile = ({\n  profile: { profile, loading },\n  createProfile,\n  getCurrentProfile,\n  history,\n  setAlert,\n}) => {\n  const [formData, setFormData] = useState({\n    company: '',\n    website: '',\n    location: '',\n    status: '',\n    skills: '',\n    githubusername: '',\n    bio: '',\n    twitter: '',\n    facebook: '',\n    linkedin: '',\n    youtube: '',\n    instagram: '',\n  });\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n  const countryOptions = useMemo(() => countryList().getData(), []);\n  const [country, setCountry] = useState('United States');\n\n  const CountrySelector = () => {\n    const countryOptions = useMemo(() => countryList().getData(), []);\n    return (\n      <Select\n        options={countryOptions}\n        value={country}\n        onChange={(val) => setCountry(val)}\n        placeholder=\"Select Country...\"\n      />\n    );\n  };\n\n  useEffect(() => {\n    getCurrentProfile();\n\n    setFormData({\n      company: loading || !profile.company ? '' : profile.company,\n      website: loading || !profile.website ? '' : profile.website,\n      location: loading || !profile.location ? '' : profile.location,\n      status: loading || !profile.status ? '' : profile.status,\n      skills: loading || !profile.skills ? '' : profile.skills,\n      githubusername:\n        loading || !profile.githubusername ? '' : profile.githubusername,\n      bio: loading || !profile.bio ? '' : profile.bio,\n      twitter: loading || !profile.social ? '' : profile.social.twitter,\n      facebook: loading || !profile.social ? '' : profile.social.facebook,\n      linkedin: loading || !profile.linkedin ? '' : profile.social.linkedin,\n      youtube: loading || !profile.youtube ? '' : profile.social.youtube,\n      instagram: loading || !profile.instagram ? '' : profile.social.instagram,\n    });\n  }, [loading, getCurrentProfile]); // prop it depends on\n\n  const youTubeRegExp = new RegExp(\n    `/((http|https):\\/\\/|)(www.|)youtube\\.com\\/(channel\\/|user\\/|)[a-zA-Z0-9]{1,}/`,\n    `ig`\n  );\n  const facebookRegExp = new RegExp(\n    `(?:(?:http|https):\\/\\/)?(?:www.)?facebook.com\\/(?:(?:\\w)*#!\\/)?(?:pages\\/)?(?:[?\\w\\-]*\\/)?(?:profile.php\\?id=(?=\\d.*))?([\\w\\-]*)?`,\n    `ig`\n  );\n  const twitterRegExp = new RegExp(\n    `(https:\\/\\/twitter.com\\/(?![a-zA-Z0-9_]+\\/)([a-zA-Z0-9_]+))`,\n    `ig`\n  );\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram,\n  } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const [validSocialLinks, setValidSocialLinks] = useState({\n    youtubeValid: false,\n    // twitterValid: false,\n    facebookValid: false,\n    // linkedinValid: false,\n    // instagramValid: false\n  });\n\n  const {\n    youtubeValid,\n    // twitterValid,\n    // facebookValid,\n    // linkedinValid,\n    // instagramValid\n  } = validSocialLinks;\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (facebook && facebookRegExp.test(facebook) == false) {\n      setAlert('facebook link invalid', 'danger');\n    } else if (youtube && youTubeRegExp.test(youtube) == false) {\n      setAlert('youtube link invalid', 'danger');\n    } else if (twitter && twitterRegExp.test(twitter) == false) {\n      setAlert('twitter link invalid', 'danger');\n    } else {\n      createProfile(formData, history, true);\n    }\n  };\n\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">Create Your Profile</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\n        <div className=\"form-group\">\n          <select name=\"status\" value={status} onChange={(e) => onChange(e)}>\n            <option value=\"0\">* Select Professional Status</option>\n            <option value=\"Developer\">Developer</option>\n            <option value=\"Junior Developer\">Junior Developer</option>\n            <option value=\"Senior Developer\">Senior Developer</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Student or Learning\">Student or Learning</option>\n            <option value=\"Instructor\">Instructor or Teacher</option>\n            <option value=\"Intern\">Intern</option>\n            <option value=\"Other\">Other</option>\n          </select>\n          <small className=\"form-text\">\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Company\"\n            name=\"company\"\n            value={company}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            Could be your own company or one you work for\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Website\"\n            name=\"website\"\n            value={website}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Location\"\n            name=\"location\"\n            value={location}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">Street Address</small>\n        </div>\n        <div style={{ display: 'inline-block', width: '100%' }}>\n          <input\n            type=\"text\"\n            placeholder=\"City\"\n            name=\"city\"\n            style={{ maxWidth: '49%', float: 'left' }}\n            // value={street}\n            // onChange={(e) => onChange(e)}\n          />\n          <select\n            type=\"text\"\n            placeholder=\"State\"\n            name=\"state\"\n            style={{ maxWidth: '49%', float: 'right' }}\n            // value={street}\n            // onChange={(e) => onChange(e)}\n          >\n            <option value=\"0\">Select State</option>\n            <option value=\"Alabama\">Alabama</option>\n            <option value=\"Alaska\">Alaska</option>\n            <option value=\"Arizona\">Arizona</option>\n            <option value=\"Arkansas\">Arkansas</option>\n            <option value=\"California\">California</option>\n            <option value=\"Colorado\">Colorado</option>\n            <option value=\"Connecticut\">Connecticut</option>\n            <option value=\"Delaware\">Delaware</option>\n            <option value=\"Flordia\">Flordia</option>\n            <option value=\"Georgia\">Georgia</option>\n            <option value=\"Hawaii\">Hawaii</option>\n            <option value=\"Idaho\">Idaho</option>\n            <option value=\"Illinois\">Illinois</option>\n            <option value=\"Indiana\">Indiana</option>\n            <option value=\"Iowa\">Iowa</option>\n            <option value=\"Kansas\">Kansas</option>\n            <option value=\"Kentucky\">Kentucky</option>\n            <option value=\"Louisiana\">Louisiana</option>\n            <option value=\"Maine\">Maine</option>\n            <option value=\"Maryland\">Maryland</option>\n            <option value=\"Massachusetts\">Massachusetts</option>\n            <option value=\"Minnesota\">Minnesota</option>\n            <option value=\"Mississippi\">Mississippi</option>\n            <option value=\"Missouri\">Missouri</option>\n            <option value=\"Montana\">Montana</option>\n            <option value=\"Nebraska\">Nebraska</option>\n            <option value=\"Nevada\">Nevada</option>\n            <option value=\"New Hampshire\">New Hampshire</option>\n            <option value=\"New Jersey\">New Jersey</option>\n            <option value=\"New Mexico\">New Mexico</option>\n            <option value=\"New York\">New York</option>\n            <option value=\"North Carolina\">North Carolina</option>\n            <option value=\"North Dakota\">North Dakota</option>\n            <option value=\"Ohio\">Ohio</option>\n            <option value=\"Oklahoma\">Oklahoma</option>\n            <option value=\"Oregon\">Oregon</option>\n            <option value=\"Pennsylvania\">Pennsylvania</option>\n            <option value=\"Rhode Island\">Rhode Island</option>\n            <option value=\"South Carolina\">South Carolina</option>\n            <option value=\"South Dakota\">South Dakota</option>\n            <option value=\"Tennessee\">Tennessee</option>\n            <option value=\"Texas\">Texas</option>\n            <option value=\"Utah\">Utah</option>\n            <option value=\"Vermont\">Vermont</option>\n            <option value=\"Virginia\">Virginia</option>\n            <option value=\"Washington\">Washington</option>\n            <option value=\"West Virginia\">West Virginia</option>\n            <option value=\"Wisconsin\">Wisconsin</option>\n            <option value=\"Wyoming\">Wyoming</option>\n          </select>\n        </div>\n        <small className=\"form-text\">City & State</small>\n        <br></br>\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"ZipCode\"\n            name=\"zipcode\"\n            // style={{ maxWidth: '49%', float: 'right' }}\n            // value={street}\n            // onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">Zipcode</small>\n        </div>\n        <div className=\"form-group\">\n          <CountrySelector />\n          <small className=\"form-text\">Select Country</small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* Skills\"\n            name=\"skills\"\n            value={skills}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Github Username\"\n            name=\"githubusername\"\n            value={githubusername}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <textarea\n            placeholder=\"A short bio of yourself\"\n            name=\"bio\"\n            value={bio}\n            onChange={(e) => onChange(e)}\n          ></textarea>\n          <small className=\"form-text\">Tell us a little about yourself</small>\n        </div>\n        <div className=\"my-2\">\n          <button\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\n            type=\"button\"\n            className=\"btn btn-light\"\n          >\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n        {displaySocialInputs && (\n          <Fragment>\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-twitter fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Twitter URL\"\n                name=\"twitter\"\n                value={twitter}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-facebook fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Facebook URL\"\n                name=\"facebook\"\n                value={facebook}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-youtube fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"YouTube URL\"\n                name=\"youtube\"\n                value={youtube}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-linkedin fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Linkedin URL\"\n                name=\"linkedin\"\n                value={linkedin}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-instagram fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Instagram URL\"\n                name=\"instagram\"\n                value={instagram}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </Fragment>\n        )}\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nEditProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  setAlert: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, {\n  createProfile,\n  getCurrentProfile,\n  setAlert,\n})(withRouter(EditProfile));\n","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/posts/Posts.js",[],"/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/profiles/Profiles.js",[],"/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/profile-forms/AddExperience.js",[],"/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/profile-forms/AddEducation.js",[],"/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/auth/Register.js",["314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331"],"import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { setAlert } from '../../actions/alert';\nimport {\n  register,\n  attemptFacebook,\n  attemptGoogle,\n  dispatchExpireCaptcha,\n  twoFactorAuth,\n  dispatchTwoFactorAuth,\n  sendWelcomeEmail,\n} from '../../actions/auth';\nimport FacebookLoginWithButton from 'react-facebook-login';\nimport GoogleLogin from 'react-google-login';\nimport { reCaptchaCheck } from '../../actions/auth';\nimport FinishRegister from './FinishRegister';\nimport FacebookLogin from './FacebookLogin';\n// import GoogleLogin from './GmailLogin';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport PropTypes from 'prop-types';\nimport GmailLogin from './GmailLogin';\nimport PhoneInput from 'react-phone-number-input';\nimport TwoFactorConfirmation from './TwoFactorConfirmation';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport { Widget, addResponseMessage, addLinkSnippet, addUserMessage } from 'react-chat-widget';\nimport 'react-chat-widget/lib/styles.css';\n\nconst Register = ({\n  setAlert,\n  register,\n  attemptFacebook,\n  attemptGoogle,\n  reCaptchaCheck,\n  dispatchExpireCaptcha,\n  isAuthenticated,\n  recaptchaApproved,\n  facebookAttempted,\n  googleAttempted,\n  twoFactorAttempted,\n  twoFactorAuth,\n  dispatchTwoFactorAuth,\n  sendWelcomeEmail,\n}) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: '',\n    id: '',\n    type: '',\n    facebookOption: false,\n    phoneNumber: '',\n  });\n\n  const [userData, setUserData] = useState({\n    fbName: 'name',\n    fbEmail: 'email',\n    fbId: 'id',\n  });\n\n  const [privacyPolicyAccepted, setPrivacyPolicyAccepted] = useState(false);\n\n  const [twoFactorAuthCode, setTwoFactorAuthCode] = useState('');\n\n  const [googleObj, setGoogleObj] = useState([]);\n\n  const {\n    name,\n    email,\n    password,\n    password2,\n    id,\n    type,\n    facebookOption,\n    phoneNumber,\n  } = formData;\n\n  var human = recaptchaApproved;\n\n  // const type = 'self';\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (password !== password2) {\n      setAlert('Passwords do not match', 'danger');\n    } else if (!privacyPolicyAccepted) {\n      setAlert('Please accept the terms and conditions', 'danger');\n    } else if (human == false) {\n      setAlert('Please verify you are human', 'danger');\n    } else {\n      // generateCode();\n      dispatchTwoFactorAuth();\n      // await register(name, email, password, phoneNumber, type, null);\n    }\n  };\n\n  const recaptchaRef = React.createRef();\n\n  const verifyCaptcha = (response) => {\n    reCaptchaCheck(response);\n  };\n\n  const expireCaptcha = () => {\n    dispatchExpireCaptcha();\n    setFormData({ ...formData, human: false });\n  };\n\n  const handleNewUserMessage = (newMessage) => {\n    if (newMessage == 'hello') {\n      addResponseMessage(`Hello there!`)\n    } else if (newMessage == 'help') {\n      addResponseMessage(\n        'Thank you for contacting us. Here are your options: \\nPress 1 to here how our site works \\nPress 2 if you are having a problem with your account \\nPress 3 to speak to a live representative'\n      )\n    } else if (newMessage == '1') {\n      addResponseMessage('Developer connect is a social media site that allows developers across the world to connect with one another as well as share their work and find partners for new endevours.')\n    }\n    console.log(`New message incoming! ${newMessage}`);\n    // Now send the message throught the backend API\n  };\n\n  if (isAuthenticated) {\n    sendWelcomeEmail(email, name);\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  // if (twoFactorAttempted) {\n  //   return <Redirect to=\"/twofactorconfirmation\" />;\n  // }\n\n  const facebookChosen = () => {\n    setFormData({ facebookOption: true });\n  };\n\n  const FacebookLoginButton = () => (\n    <FacebookLoginWithButton\n      appId=\"921874351684228\"\n      fields=\"name,email,id\"\n      callback={facebookResponse}\n      icon=\"fa-facebook\"\n      textButton=\"Register with Facebook\"\n      // buttonStyle={{\n      //   // height: '50px',\n      //   textAlign: 'center',\n      //   alignContent: 'center',\n      //   alignItems: 'center',\n      //   borderRadius: '100px',\n      //   padding: '-100px',\n      // }}\n      // onClick={facebookClicked}\n    />\n  );\n\n  const GoogleLoginButton = () => (\n    <GoogleLogin\n      clientId=\"753445575160-cajf8p3ntsdrkhj6s744a7gflmdscd0j.apps.googleusercontent.com\"\n      buttonText=\"Register with Google\"\n      onSuccess={responseGoogle}\n      onFailure={responseGoogle}\n      cookiePolicy={'single_host_origin'}\n      type=\"dark\"\n      // style={{\n      //   height: '100px',\n      //   padding: '20px',\n      //   background: 'red',\n      // }}\n    />\n  );\n\n  const loginGoogle = (response) => {\n    console.log(response);\n  };\n\n  // const GoogleLoginButton = () => (\n  //   // <p>Hi</p>\n\n  // );\n\n  const facebookResponse = async (response) => {\n    await attemptFacebook();\n    setFormData({\n      name: response.name,\n      email: response.email,\n      id: response.id,\n      type: 'facebook',\n    });\n  };\n\n  const responseGoogle = async (response) => {\n    await attemptGoogle();\n    setFormData({\n      name: response.profileObj.name,\n      email: response.profileObj.email,\n      id: response.googleId,\n      type: 'google',\n    });\n    console.log(type);\n  };\n\n  // const generateCode = () => {\n  //   const randomCode = Math.floor(100000 + Math.random() * 900000);\n  //   setTwoFactorAuthCode(`${randomCode}`);\n  // };\n\n  const onPhoneChange = (e) => {\n    setFormData({ ...formData, phoneNumber: e });\n  };\n\n  return (\n    <Fragment>\n      {!facebookAttempted && !googleAttempted ? (\n        !twoFactorAttempted ? (\n          <Fragment>\n            <h1 className=\"large text-primary\">Register</h1>\n            <p className=\"lead\">\n              <i className=\"fas fa-user\"></i> Create Your Account\n            </p>\n            <Tabs>\n            <TabList>\n              <Tab>Register With Site</Tab>\n              <Tab>Register With Facebook</Tab>\n              <Tab>Register With Google</Tab>\n            </TabList>\n              <TabPanel>\n                <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\n                  <small className=\"form-text\">\n                    If you do not register with facebook or google, you will be\n                    prompted for two-factor-authentication\n                  </small>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      placeholder=\"Name\"\n                      name=\"name\"\n                      id=\"namefield\"\n                      value={name}\n                      onChange={(e) => onChange(e)}\n                      required\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"email\"\n                      placeholder=\"Email Address\"\n                      name=\"email\"\n                      id=\"emailfield\"\n                      value={email}\n                      onChange={(e) => onChange(e)}\n                      required\n                    />\n                    <small className=\"form-text\">\n                      This site uses Gravatar so if you want a profile image, use a\n                      Gravatar email\n                    </small>\n                  </div>\n                  <PhoneInput\n                    maxLength=\"15\"\n                    minLength=\"4\"\n                    id=\"phoneNumber\"\n                    //   style={{ height: '30px', maxWidth: '270px' }}\n                    defaultCountry=\"US\"\n                    placeholder=\"Phone number\"\n                    value={phoneNumber}\n                    onChange={(e) => onPhoneChange(e)}\n                  />\n                  <div className=\"form-group\">\n                    <input\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      name=\"password\"\n                      minLength=\"6\"\n                      value={password}\n                      onChange={(e) => onChange(e)}\n                      required\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"password\"\n                      placeholder=\"Confirm Password\"\n                      name=\"password2\"\n                      minLength=\"6\"\n                      value={password2}\n                      onChange={(e) => onChange(e)}\n                      required\n                    />\n                  </div>\n                  <ReCAPTCHA\n                    ref={recaptchaRef}\n                    sitekey=\"6Le2z0oaAAAAABG-NkcbHXAHv03pkxHdwRzak2IA\"\n                    render=\"explicit\"\n                    onChange={verifyCaptcha}\n                    onExpired={expireCaptcha}\n                  />\n                  <br></br>\n                  <input\n                    type=\"checkbox\"\n                    id=\"privacypolicy\"\n                    name=\"privacypolicy\"\n                    value=\"privacypolicy\"\n                    onChange={(e) =>\n                      setPrivacyPolicyAccepted(!privacyPolicyAccepted)\n                    }\n                  />{' '}\n                  <label htmlFor=\"privacypolicy\">\n                    I agree to the{' '}\n                    <Link to=\"/privacypolicy\">\n                      privacy policy and terms of service\n                    </Link>\n                  </label>\n                  <br></br>\n                  <br></br>\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-primary\"\n                    value=\"Register\"\n                  />\n                </form>\n              </TabPanel>\n              <TabPanel>\n                <FacebookLoginButton onChange={facebookChosen} />\n              </TabPanel>\n              <TabPanel>\n                <GoogleLoginButton />\n              </TabPanel>\n            </Tabs>\n            \n            <p className=\"my-1\">\n              Already have an account? <Link to=\"/login\">Sign In</Link>\n            </p>\n          </Fragment>\n        ) : (\n          <TwoFactorConfirmation\n            name={name}\n            email={email}\n            password={password}\n            phoneNumber={phoneNumber}\n          />\n        )\n      ) : (\n        <FinishRegister\n          facebookName={name}\n          email={email}\n          id={id}\n          type={type}\n          // twoFactorAuthCode={twoFactorAuthCode}\n        />\n      )}\n    </Fragment>\n  );\n};\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  attemptFacebook: PropTypes.func.isRequired,\n  attemptGoogle: PropTypes.func.isRequired,\n  reCaptchaCheck: PropTypes.func.isRequired,\n  twoFactorAuth: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n  dispatchExpireCaptcha: PropTypes.func.isRequired,\n  recaptchaApproved: PropTypes.bool,\n  facebookAttempted: PropTypes.bool,\n  googleAttempted: PropTypes.bool,\n  twoFactorAttempted: PropTypes.bool,\n  dispatchTwoFactorAuth: PropTypes.func.isRequired,\n  sendWelcomeEmail: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  recaptchaApproved: state.auth.recaptchaApproved,\n  facebookAttempted: state.auth.facebookAttempted,\n  twoFactorAttempted: state.auth.twoFactorAttempted,\n  googleAttempted: state.auth.googleAttempted,\n});\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  register,\n  reCaptchaCheck,\n  attemptFacebook,\n  attemptGoogle,\n  dispatchExpireCaptcha,\n  twoFactorAuth,\n  dispatchTwoFactorAuth,\n  sendWelcomeEmail,\n})(Register);\n","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/layout/Alert.js",[],"/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/routing/PrivateRoute.js",[],"/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/post/Post.js",["332"],"import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport PostItem from '../posts/PostItem';\nimport CommentForm from './CommentForm';\nimport CommentItem from './CommentItem';\nimport { getPost } from '../../actions/post';\n\nconst Post = ({ getPost, post: { post, loading }, match }) => {\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost]);\n\n  return loading || post === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <Link to=\"/posts\" className=\"btn\">\n        Back To Posts\n      </Link>\n      <PostItem post={post} showActions={false} />\n      <CommentForm postId={post._id} />\n      <div className=\"comments\">\n        {post.comments.map((comment) => (\n          <CommentItem key={comment._id} comment={comment} postId={post._id} />\n        ))}\n      </div>\n    </Fragment>\n  );\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  post: state.post,\n});\n\nexport default connect(mapStateToProps, { getPost })(Post);\n","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/actions/types.js",[],"/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/actions/alert.js",[],"/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/dashboard/DashboardActions.js",[],"/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/actions/profile.js",[],"/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/dashboard/Education.js",[],"/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/layout/Spinner.js",["333","334"],"import React, { Fragment } from 'react';\nimport spinner from './spinner.gif';\n\nexport default () => (\n  <Fragment>\n    <img\n      src={spinner}\n      style={{ width: '200px', margin: 'auto', display: 'block' }}\n    />\n  </Fragment>\n);\n","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/profile/ProfileTop.js",["335"],"import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ProfileTop = ({\n  profile: {\n    status,\n    company,\n    location,\n    website,\n    social,\n    user: { name, avatar },\n  },\n}) => {\n  return (\n    <div className=\"profile-top bg-primary p-2\">\n      <img className=\"my-1\" src={avatar} alt=\"\" />\n      <h1 className=\"large\">{name}</h1>\n      <p className=\"lead\">\n        {status} {company && <span> at {company} </span>}\n      </p>\n      <p>{location && <span>{location}</span>}</p>\n      <div className=\"icons my-1\">\n        {website && (\n          <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className=\"fas fa-globe fa-2x\"></i>\n          </a>\n        )}\n        {social && social.twitter && (\n          <a href={social.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className=\"fab fa-twitter fa-2x\"></i>\n          </a>\n        )}\n        {social && social.facebook && (\n          <a href={social.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className=\"fab fa-facebook fa-2x\"></i>\n          </a>\n        )}\n        {social && social.linkedin && (\n          <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className=\"fab fa-linkedin fa-2x\"></i>\n          </a>\n        )}\n        {social && social.youtube && (\n          <a href={social.youtube} target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className=\"fab fa-youtube fa-2x\"></i>\n          </a>\n        )}\n        {social && social.instagram && (\n          <a href={social.instagram} target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className=\"fab fa-instagram fa-2x\"></i>\n          </a>\n        )}\n      </div>\n    </div>\n  );\n};\n\nProfileTop.propTypes = {\n  profile: PropTypes.object.isRequired,\n};\n\nexport default ProfileTop;\n","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/profile/ProfileExperience.js",[],"/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/dashboard/Experience.js",[],"/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/profile/ProfileAbout.js",[],"/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/profile/ProfileEducation.js",[],"/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/posts/PostForm.js",[],"/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/profile/ProfileGithub.js",[],"/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/posts/PostItem.js",[],"/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/actions/post.js",["336"],"import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n  GET_POSTS,\n  GET_POST,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT,\n} from './types';\n\n// Get Posts\nexport const getPosts = () => async (dispatch) => {\n  try {\n    const res = await axios.get('/api/posts');\n\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add like\nexport const addLike = (id) => async (dispatch) => {\n  try {\n    const res = await axios.put(`/api/posts/like/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { id, likes: res.data },\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Remove like\nexport const removeLike = (id) => async (dispatch) => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { id, likes: res.data },\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Delete post\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await axios.delete(`/api/posts/${id}`);\n\n    dispatch({\n      type: DELETE_POST,\n      payload: id,\n    });\n\n    dispatch(setAlert('Post Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add post\nexport const addPost = (formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  try {\n    const res = await axios.post('/api/posts', formData, config);\n\n    dispatch({\n      type: ADD_POST,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Post Created', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Get Post\nexport const getPost = (id) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/posts/${id}`);\n\n    dispatch({\n      type: GET_POST,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add comment\nexport const addComment = (postId, formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  try {\n    const res = await axios.post(\n      `/api/posts/comment/${postId}`,\n      formData,\n      config\n    );\n\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Comment Added', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Delete comment\nexport const deleteComment = (postId, commentId) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\n\n    dispatch({\n      type: REMOVE_COMMENT,\n      payload: commentId,\n    });\n\n    dispatch(setAlert('Comment Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/post/CommentItem.js",["337"],"import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Moment from 'react-moment';\nimport { deleteComment } from '../../actions/post';\n\nconst CommentItem = ({\n  postId,\n  comment: { _id, text, name, avatar, user, date },\n  auth,\n  deleteComment,\n}) => {\n  return (\n    <div class=\"post bg-white p-1 my-1\">\n      <div>\n        <Link to={`/profile/${user}`}>\n          <img class=\"round-img\" src={avatar} alt=\"\" />\n          <h4>{name}</h4>\n        </Link>\n      </div>\n      <div>\n        <p class=\"my-1\">{text}</p>\n        <p class=\"post-date\">\n          Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment>\n        </p>\n        {!auth.loading && user === auth.user._id && (\n          <button\n            onClick={(e) => deleteComment(postId, _id)}\n            type=\"button\"\n            className=\"btn btn-danger\"\n          >\n            <i className=\"fas fa-times\"></i>\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nCommentItem.propTypes = {\n  postId: PropTypes.number.isRequired,\n  comment: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  deleteComment: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\n","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/post/CommentForm.js",[],"/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/profiles/ProfileItem.js",[],"/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/reducers/index.js",[],"/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/reducers/auth.js",["338","339"],"import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  ACCOUNT_DELETED,\n  RECAPTCHA_APPROVED,\n  RECAPTCHA_EXPIRED,\n  RECAPTCHA_DENIED,\n  FACEBOOK_REGISTER_ATTEMPTED,\n  TWO_FACTOR_ATTEMPTED,\n  TWO_FACTOR_SUCCESS,\n  TWO_FACTOR_FAILED,\n  GOOGLE_REGISTER_ATTEMPTED,\n} from '../actions/types';\n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  recaptchaApproved: false,\n  facebookAttempted: false,\n  googleAttempted: false,\n  twoFactorAttempted: false,\n  twoFactorApproved: false,\n  loading: true,\n  user: null,\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload,\n        facebookAttempted: false,\n        googleAttempted: false,\n        // twoFactorAttempted: false,\n      };\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      localStorage.setItem('token', payload.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false,\n        facebookAttempted: false,\n        googleAttempted: false,\n        twoFactorAttempted: false,\n      };\n    case TWO_FACTOR_FAILED:\n    case REGISTER_FAIL:\n    case LOGIN_FAIL:\n    case AUTH_ERROR:\n    case LOGOUT:\n    case ACCOUNT_DELETED:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        facebookAttempted: false,\n        googleAttempted: false,\n        twoFactorApproved: false,\n        // twoFactorAttempted: false,\n        // twoFactorAttempted: false,\n      };\n    case RECAPTCHA_EXPIRED:\n    case RECAPTCHA_DENIED:\n      return {\n        ...state,\n        recaptchaApproved: false,\n      };\n    case RECAPTCHA_APPROVED:\n      return {\n        ...state,\n        recaptchaApproved: true,\n      };\n    case TWO_FACTOR_ATTEMPTED:\n      return {\n        ...state,\n        twoFactorAttempted: true,\n      };\n    case FACEBOOK_REGISTER_ATTEMPTED:\n      return {\n        ...state,\n        facebookAttempted: true,\n      };\n    case GOOGLE_REGISTER_ATTEMPTED:\n      return {\n        ...state,\n        googleAttempted: true,\n      };\n    case TWO_FACTOR_SUCCESS:\n      return {\n        ...state,\n        twoFactorApproved: true,\n      };\n    case TWO_FACTOR_FAILED:\n      return {\n        ...state,\n        twoFactorApproved: false,\n      };\n    default:\n      return state;\n  }\n}\n","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/reducers/alert.js",["340"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\n\nconst initialState = [];\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_ALERT:\n      return [...state, payload];\n    case REMOVE_ALERT:\n      return state.filter((alert) => alert.id !== payload);\n    default:\n      return state;\n  }\n}\n","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/reducers/profile.js",["341"],"import {\n  GET_PROFILE,\n  PROFILE_ERROR,\n  CLEAR_PROFILE,\n  UPDATE_PROFILE,\n  GET_PROFILES,\n  GET_REPOS,\n} from '../actions/types';\n\nconst initialState = {\n  profile: null,\n  profiles: [], // for list of developer page\n  repos: [], // repos we fetch from git\n  loading: true,\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_PROFILE:\n    case UPDATE_PROFILE:\n      return {\n        ...state,\n        profile: payload,\n        loading: false,\n      };\n    case GET_PROFILES:\n      return {\n        ...state,\n        profiles: payload,\n        loading: false,\n      };\n    case PROFILE_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      };\n    case CLEAR_PROFILE:\n      return {\n        ...state,\n        profile: null,\n        repos: [],\n        loading: false,\n      };\n    case GET_REPOS:\n      return {\n        ...state,\n        repos: payload,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/reducers/post.js",["342","343"],"import {\n  GET_POSTS,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_POST,\n  GET_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT,\n} from '../actions/types';\nimport { defineLocale } from 'moment';\n\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: payload,\n        loading: false,\n      };\n    case GET_POST:\n      return {\n        ...state,\n        post: payload,\n        loading: false,\n      };\n    case ADD_POST:\n      return {\n        ...state,\n        posts: [payload, ...state.posts],\n        loading: false,\n      };\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter((post) => post._id !== payload), // returning all posts besides one that got deleted\n        loading: false,\n      };\n    case POST_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      };\n    case UPDATE_LIKES:\n      return {\n        ...state,\n        posts: state.posts.map((post) =>\n          post._id === payload.id ? { ...post, likes: payload.likes } : post\n        ),\n        loading: false,\n      };\n    case ADD_COMMENT:\n      return {\n        ...state,\n        post: { ...state.post, comments: payload },\n        loading: false,\n      };\n    case REMOVE_COMMENT:\n      return {\n        ...state,\n        post: {\n          ...state.post,\n          comments: state.post.comments.filter(\n            (comment) => comment._id !== payload\n          ),\n          loading: false,\n        },\n      };\n    default:\n      return state;\n  }\n}\n","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/auth/FacebookLogin.js",["344","345","346","347"],"import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport FacebookLoginWithButton from 'react-facebook-login';\nimport { setAlert } from '../../actions/alert';\nimport { register, attemptFacebook, uploadProfilePicture } from '../../actions/auth';\nimport FinishRegister from './FinishRegister';\n\nconst FacebookLogin = ({\n  setAlert,\n  register,\n  isAuthenticated,\n  facebookAttempted,\n  attemptFacebook,\n  uploadProfilePicture,\n}) => {\n  var [name, setName] = useState('');\n  var [email, setEmail] = useState('');\n  var [id, setId] = useState('');\n  var [picture, setPicture] = useState('');\n\n  const type = 'facebook';\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  const LoginButton = () => (\n    <FacebookLoginWithButton\n      appId=\"921874351684228\"\n      fields=\"name,email,id\"\n      callback={facebookResponse}\n      icon=\"fa-facebook\"\n      // onClick={facebookClicked}\n    />\n  );\n\n  const facebookResponse = async (response) => {\n    setName(response.name);\n    setEmail(response.email);\n    setId(response.id);\n  };\n\n  return (\n    <Fragment>\n      {/* <LoginButton /> */}\n      <h1>name is... {name}</h1>\n      {name ? (\n        <FinishRegister facebookName={name} email={email} id={id} />\n      ) : (\n        <LoginButton />\n      )}\n    </Fragment>\n  );\n};\n\nFacebookLogin.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n  facebookAttempted: PropTypes.bool,\n  attemptFacebook: PropTypes.func.isRequired,\n  uploadProfilePicture: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  facebookAttempted: state.auth.facbookAttempted,\n});\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  register,\n  attemptFacebook,\n  uploadProfilePicture,\n})(FacebookLogin);\n","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/auth/GmailLogin.js",["348"],"import React from 'react';\nimport GoogleLoginWithButton, { GoogleLogin } from 'react-google-login';\n\nfunction GmailLogin() {\n  const responseGoogle = (response) => {\n    console.log(response);\n  };\n  return (\n    <GoogleLogin\n      clientId=\"753445575160-cajf8p3ntsdrkhj6s744a7gflmdscd0j.apps.googleusercontent.com\"\n      buttonText=\"Log in with Google\"\n      onSuccess={responseGoogle}\n      onFailure={responseGoogle}\n      cookiePolicy={'single_host_origin'}\n    />\n  );\n}\n\nexport default GmailLogin;\n","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/auth/PrivacyNotice.js",["349"],"import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\n\nexport const PrivacyPolicy = ({ facebookAttempted }) => {\n  return (\n    <Fragment>\n      {!facebookAttempted && (\n        <Link to=\"/register\" className=\"btn\">\n          Back\n        </Link>\n      )}\n      <br></br>\n      <br></br>\n      <h1 className=\"large text-primary\">\n        Developer Connect Privacy Policy and Terms of Service\n      </h1>\n      <h3>Last updated February 4th, 2021</h3>\n      <br></br>\n      <p>\n        Developer Connect provides an environment for developers to create their\n        very own developer profile. It allows developers to post about their\n        code, their work, their experiences or anything developer related. They\n        can view each others posts, connect with one another and build a\n        developer profile that suits them. The webapp will also connect to\n        consumers github account through their github username (if provided) in\n        order to display their personal repositories.\n        <br></br>\n        <br></br>\n      </p>\n      <h2>Collection of your Personal Information</h2>\n      <p>\n        Developer Connect will collect and store the information you provide us\n        with. This includes but is not limited to...\n        <ul>\n          <li>- Your Name</li>\n          <li>- Your Email</li>\n          <li>- Your github account / repositories / username</li>\n          <li>- Your Work Experience</li>\n          <li>- Your Education History</li>\n        </ul>\n        <br></br>\n      </p>\n      <p>\n        Developer Connect will collect and store the information neccessary to\n        make our site run smoothly.\n        <br></br>\n        Alike other sites, we will use cookies and other unique identifiers to\n        make your experience easier for you. Information will be collected when\n        your web browser or device access our site.\n        <br></br>\n        We will utilize google reCAPTCHA in order to prevent hacking and make\n        sure your account, as well as our site is safe. This will verify you are\n        human and not collect or save any personal information other than such.\n        <br></br>\n      </p>\n      <h2>Purposes and Uses of Your Personal Information</h2>\n      <p>\n        Developer Connect will collect and store the information neccessary to\n        make our site run smoothly.\n        <br></br>\n        Alike other sites, we will use cookies and other unique identifiers to\n        make your experience easier for you. Information will be collected when\n        your web browser or device access our site.\n        <br></br>\n        <h2>Facebook Login Option</h2>\n        When you choose our facebook login information, we will collect certain\n        personal information for the sole purpose of creating you a working\n        account.\n        <br></br>\n        We will collect your name, email, and facebook Id for account creation\n        purposes. No other personal facebook information will be collected and\n        your account will remain secure.\n        <br></br>\n      </p>\n    </Fragment>\n  );\n};\n\nPrivacyPolicy.propTypes = {\n  facebookAttempted: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  facebookAttempted: state.auth.facebookAttempted,\n});\n\nexport default connect(mapStateToProps, null)(PrivacyPolicy);\n","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/auth/FinishRegister.js",["350","351","352","353","354"],"import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { setAlert } from '../../actions/alert';\nimport {\n  register,\n  dispatchExpireCaptcha,\n  sendWelcomeEmail,\n} from '../../actions/auth';\nimport PhoneInput from 'react-phone-number-input';\n\nimport FacebookLogin from './FacebookLogin';\nimport GoogleLogin from './GmailLogin';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport { reCaptchaCheck } from '../../actions/auth';\n\nimport PropTypes from 'prop-types';\nimport PrivacyPolicy from './PrivacyNotice';\n\nconst FinishRegister = ({\n  facebookName,\n  email,\n  id,\n  type,\n  setAlert,\n  register,\n  isAuthenticated,\n  dispatchExpireCaptcha,\n  recaptchaApproved,\n  reCaptchaCheck,\n  sendWelcomeEmail,\n}) => {\n  const [formData, setFormData] = useState({\n    alias: '',\n    phoneNumber: '',\n  });\n  const [privacyPolicyAccepted, setPrivacyPolicyAccepted] = useState(false);\n  const [showPrivacyPolicy, setShowPrivacyPolicy] = useState(false);\n  const [phoneNumber, setPhoneNumber] = useState('');\n\n  // const { alias, phoneNumber } = formData;\n\n  var human = recaptchaApproved;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const verifyCaptcha = (response) => {\n    reCaptchaCheck(response);\n  };\n\n  const expireCaptcha = () => {\n    dispatchExpireCaptcha();\n    setFormData({ ...formData, human: false });\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (!phoneNumber) {\n      setAlert('Phone number is required', 'danger');\n    } else if (!privacyPolicyAccepted) {\n      setAlert('Please accept the terms and conditions', 'danger');\n    } else if (human == false) {\n      setAlert('Please verify you are human', 'danger');\n    } else {\n      // const type = 'facebook';\n      console.log(type);\n      register(facebookName, email, null, phoneNumber, type, id);\n    }\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  const backClicked = () => {\n    window.location.reload();\n  };\n\n  const conditionsClicked = () => {\n    setShowPrivacyPolicy(!showPrivacyPolicy);\n  };\n\n  const onPhoneChange = (e) => {\n    setPhoneNumber(e);\n  };\n\n  return (\n    <Fragment>\n      <button className=\"btn\" onClick={backClicked}>\n        Cancel\n      </button>\n      <br></br>\n      <br></br>\n      <h1 className=\"large text-primary\">You're almost there...</h1>\n      <h2>Name: {facebookName}</h2>\n      <h2>Email: {email}</h2>\n      {/* <h2>{id}</h2> */}\n      <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\n        <br></br>\n        <PhoneInput\n          maxLength=\"15\"\n          minLength=\"4\"\n          id=\"phoneNumber\"\n          //   style={{ height: '30px', maxWidth: '270px' }}\n          defaultCountry=\"US\"\n          placeholder=\"Enter phone number\"\n          value={phoneNumber}\n          onChange={(e) => onPhoneChange(e)}\n        />\n        <br></br>\n        <input\n          type=\"checkbox\"\n          id=\"privacypolicy\"\n          name=\"privacypolicy\"\n          value=\"privacypolicy\"\n          onChange={(e) => setPrivacyPolicyAccepted(!privacyPolicyAccepted)}\n        />{' '}\n        <label htmlFor=\"privacypolicy\">\n          I agree to the{' '}\n          <Link onClick={conditionsClicked}>\n            privacy policy and terms of service\n          </Link>\n          {/* <Link to=\"/privacypolicy\">privacy policy and terms of service</Link> */}\n        </label>\n        <br></br>\n        <br></br>\n        <ReCAPTCHA\n          sitekey=\"6Le2z0oaAAAAABG-NkcbHXAHv03pkxHdwRzak2IA\"\n          render=\"explicit\"\n          onChange={verifyCaptcha}\n          onExpired={expireCaptcha}\n        />\n        <br></br>\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\n      </form>\n      <p className=\"my-1\">\n        {/* Already have an account? <Link to=\"/login\">Sign In</Link> */}\n      </p>\n      {showPrivacyPolicy == true && <PrivacyPolicy />}\n    </Fragment>\n  );\n};\n\nFinishRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n  reCaptchaCheck: PropTypes.func.isRequired,\n  dispatchExpireCaptcha: PropTypes.func.isRequired,\n  recaptchaApproved: PropTypes.bool,\n  sendWelcomeEmail: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  recaptchaApproved: state.auth.recaptchaApproved,\n});\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  register,\n  reCaptchaCheck,\n  dispatchExpireCaptcha,\n  sendWelcomeEmail,\n})(FinishRegister);\n","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/auth/FacebookReLogin.js",["355","356","357","358","359","360"],"import React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport FacebookLoginWithButton from 'react-facebook-login';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/auth';\nimport FacebookLogin from './FacebookLogin';\nimport { setAlert } from '../../actions/alert';\n\nexport const FacebookReLogin = ({\n  login,\n  isAuthenticated,\n  setAlert,\n  recaptchaApproved,\n}) => {\n  const [userData, setUserData] = useState({\n    name: '',\n    email: '',\n    id: '',\n  });\n\n  const { name, email, id } = userData;\n\n  var human = recaptchaApproved;\n\n  // Redirect if logged in\n  if (isAuthenticated) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  const LoginButton = () => (\n    <FacebookLoginWithButton\n      appId=\"921874351684228\"\n      // autoLoad\n      fields=\"name,email,id\"\n      callback={facebookResponse}\n      icon=\"fa-facebook\"\n    />\n  );\n\n  const facebookResponse = (response) => {\n    setUserData({\n      name: response.name,\n      email: response.email,\n      id: response.id,\n    });\n    if (human == false) {\n      setAlert('Please verify you are human', 'danger');\n    } else {\n      login(response.email, null, response.id);\n    }\n  };\n\n  return (\n    <Fragment>\n      <LoginButton />\n    </Fragment>\n  );\n};\n\nFacebookReLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n  setAlert: PropTypes.func.isRequired,\n  recaptchaApproved: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  recaptchaApproved: state.auth.recaptchaApproved,\n});\n\nexport default connect(mapStateToProps, { login, setAlert })(FacebookReLogin);\n","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/auth/Contact.js",["361","362","363","364","365","366","367","368","369"],"import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link, Redirect } from 'react-router-dom';\nimport PhoneInput from 'react-phone-number-input';\nimport 'react-phone-number-input/style.css';\nimport { sendTextMessage } from '../../actions/auth';\nimport { setAlert } from '../../actions/alert';\nimport { CometChat } from \"@cometchat-pro/chat\"\nimport { Widget, addResponseMessage, addLinkSnippet, addUserMessage } from 'react-chat-widget';\nimport 'react-chat-widget/lib/styles.css';\n\nconst Contact = ({\n  setAlert,\n  sendTextMessage,\n  auth: { user },\n  isAuthenticated,\n}) => {\n  const [formData, setFormData] = useState({\n    phoneNumber: '',\n    message: '',\n  });\n\n  const { phoneNumber, message } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  if (!isAuthenticated) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const name = user.name;\n    if (!phoneNumber) {\n      setAlert('Phone number is required', 'danger');\n    } else if (!message) {\n      setAlert('Message is required');\n    } else {\n      sendTextMessage(name, phoneNumber, message);\n      setFormData({\n        phoneNumber: '',\n        message: '',\n      });\n      setAlert('Your message has been sent');\n    }\n  };\n\n  const onPhoneChange = (e) => {\n    setFormData({ ...formData, phoneNumber: e });\n  };\n\n  const handleNewUserMessage = (newMessage) => {\n    if (newMessage == 'hello') {\n      addResponseMessage(`Hello there, ${user.name}!`)\n    } else if (newMessage == 'help') {\n      addResponseMessage(\n        'Thank you for contacting us. Here are your options: \\nPress 1 to here how our site works \\nPress 2 if you are having a problem with your account \\nPress 3 to speak to a live representative'\n      )\n    } else if (newMessage == '1') {\n      addResponseMessage('Developer connect is a social media site that allows developers across the world to connect with one another as well as share their work and find partners for new endevours.')\n    }\n    console.log(`New message incoming! ${newMessage}`);\n    // Now send the message throught the backend API\n  };\n\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">Contact the Developers</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Connect Directly with Our Sites\n        Developers\n      </p>\n      <p>\n        Hi there <strong style={{ fontSize: '1.2rem' }}>{user.name}</strong>,\n        enter your phone number and message to contact us directly, and we will\n        get back to you as soon as possible!\n      </p>\n      <br></br>\n      <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\n        <PhoneInput\n          maxLength=\"15\"\n          minLength=\"4\"\n          id=\"phoneNumber\"\n          //   style={{ height: '30px', maxWidth: '270px' }}\n          defaultCountry=\"US\"\n          placeholder=\"Enter phone number\"\n          value={phoneNumber}\n          onChange={(e) => onPhoneChange(e)}\n        />\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            id=\"message\"\n            maxLength=\"50\"\n            placeholder=\"Message to developers\"\n            name=\"message\"\n            minLength=\"6\"\n            value={message}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Submit\" />\n      </form>\n      {/* <iframe src=\"https://deadsimplechat.com/oi1_Ch3BI\" style=\"width: 100%; height: 500px;\"></iframe>\n       */}\n       {/* <Widget\n          handleNewUserMessage={handleNewUserMessage}\n          // profileAvatar={logo}\n          title=\"Have a question?\"\n          subtitle=\"We are here to help!\"\n        /> */}\n    </Fragment>\n\n  );\n};\n\nContact.propTypes = {\n  sendTextMessage: PropTypes.func.isRequired,\n  setAlert: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { sendTextMessage, setAlert })(Contact);\n","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/auth/TwoFactorConfirmation.js",["370","371","372","373","374","375","376","377"],"import React, { Fragment, useState, useEffect } from 'react';\n// import { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { setAlert } from '../../actions/alert';\nimport {\n  register,\n  dispatchExpireCaptcha,\n  twoFactorAuth,\n  twoFactorAuthCheck,\n  sendWelcomeEmail,\n} from '../../actions/auth';\nimport PhoneInput from 'react-phone-number-input';\nimport PropTypes from 'prop-types';\n\nconst TwoFactorConfirmation = ({\n  name,\n  email,\n  phoneNumber,\n  password,\n  setAlert,\n  isAuthenticated,\n  twoFactorAuth,\n  twoFactorApproved,\n  twoFactorAuthCheck,\n  register,\n  sendWelcomeEmail,\n}) => {\n  useEffect(() => {\n    twoFactorAuth(email, phoneNumber);\n  }, [twoFactorAuth]);\n  const [confirmationCode, setConfirmationCode] = useState('');\n\n  const [twoFactorAuthCode, setTwoFactorAuthCode] = useState('');\n\n  var approved = twoFactorApproved;\n\n  const checkConfirmationCode = (value) => {\n    setConfirmationCode(value);\n    twoFactorAuthCheck(email, confirmationCode);\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const result = await twoFactorAuthCheck(email, confirmationCode);\n    if (!result) {\n      setAlert('Security Code Incorrect', 'danger');\n    } else {\n      const type = 'self';\n      // sendWelcomeEmail(email, name);\n      register(name, email, password, phoneNumber, type, null);\n    }\n  };\n\n  //   if (isAuthenticated) {\n  //     return <Redirect to=\"/dashboard\" />;\n  //   }\n\n  const backClicked = () => {\n    window.location.reload();\n  };\n\n  if (isAuthenticated) {\n    // sendWelcomeEmail(email, name);\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  // const generateCode = () => {\n  //   const randomCode = Math.floor(100000 + Math.random() * 900000);\n  //   setTwoFactorAuthCode(`${randomCode}`);\n  // };\n\n  const handleCodeChange = (event) => {\n    setConfirmationCode(event.target.value);\n    // twoFactorAuthCheck(email, event.target.value);\n    // twoFactorAuthCheck(email, confirmationCode);\n  };\n\n  return (\n    <Fragment>\n      <button className=\"btn\" onClick={backClicked}>\n        Cancel\n      </button>\n      <br></br>\n      <br></br>\n      <h1 className=\"large text-primary\">Please verify it is you, {name}</h1>\n      {/* <h2>Name: {name}</h2>\n      <h2>Email: {email}</h2>\n      <h2>Password: {password}</h2>\n      <h2>Code: {twoFactorAuthCode}</h2> */}\n      <h2>\n        Security code sent to: ******\n        {phoneNumber.substr(phoneNumber.length - 4)}\n      </h2>\n      {/* <h2>{id}</h2> */}\n      <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\n        <br></br>\n        <input\n          type=\"text\"\n          id=\"confirmationCode\"\n          maxLength=\"6\"\n          name=\"confirmationCode\"\n          value={confirmationCode}\n          onChange={handleCodeChange}\n        />{' '}\n        <br></br>\n        <button className=\"btn\">Resend Code</button>\n        <br></br>\n        <br></br>\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Continue\" />\n      </form>\n      <p className=\"my-1\">\n        {/* Already have an account? <Link to=\"/login\">Sign In</Link> */}\n      </p>\n    </Fragment>\n  );\n};\n\nTwoFactorConfirmation.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n  twoFactorAuth: PropTypes.func.isRequired,\n  twoFactorAuthCheck: PropTypes.func.isRequired,\n  twoFactorApproved: PropTypes.bool,\n  register: PropTypes.func.isRequired,\n  sendWelcomeEmail: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  twoFactorApproved: state.auth.twoFactorApproved,\n});\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  twoFactorAuth,\n  twoFactorAuthCheck,\n  register,\n  sendWelcomeEmail,\n})(TwoFactorConfirmation);\n","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/auth/TwoFactorLoginConfirmation.js",["378","379","380","381","382","383","384","385"],"import React, { Fragment, useState, useEffect } from 'react';\n// import { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { setAlert } from '../../actions/alert';\nimport {\n  login,\n  dispatchExpireCaptcha,\n  twoFactorAuth,\n  twoFactorAuthCheck,\n} from '../../actions/auth';\nimport PhoneInput from 'react-phone-number-input';\nimport PropTypes from 'prop-types';\n\nconst TwoFactorLoginConfirmation = ({\n  email,\n  setAlert,\n  isAuthenticated,\n  twoFactorAuth,\n  twoFactorApproved,\n  twoFactorAuthCheck,\n  login,\n  auth: { user },\n}) => {\n  useEffect(() => {\n    twoFactorAuth(email, user.phoneNumber);\n  }, [twoFactorAuth]);\n  const [confirmationCode, setConfirmationCode] = useState('');\n\n  const [twoFactorAuthCode, setTwoFactorAuthCode] = useState('');\n\n  const checkConfirmationCode = (value) => {\n    setConfirmationCode(value);\n    twoFactorAuthCheck(email, confirmationCode);\n  };\n\n  //   const phone = user.phoneNumber;\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const result = await twoFactorAuthCheck(email, confirmationCode);\n    if (!result) {\n      setAlert('Security Code Incorrect', 'danger');\n    } else {\n      <Redirect to=\"/dashboard\" />;\n    }\n  };\n\n  //   if (isAuthenticated) {\n  //     return <Redirect to=\"/dashboard\" />;\n  //   }\n\n  const backClicked = () => {\n    window.location.reload();\n  };\n\n  if (twoFactorApproved && isAuthenticated) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  // const generateCode = () => {\n  //   const randomCode = Math.floor(100000 + Math.random() * 900000);\n  //   setTwoFactorAuthCode(`${randomCode}`);\n  // };\n\n  const handleCodeChange = (event) => {\n    setConfirmationCode(event.target.value);\n    // twoFactorAuthCheck(email, confirmationCode);\n  };\n\n  return (\n    <Fragment>\n      {/* <button className=\"btn\" onClick={backClicked}>\n        Cancel\n      </button> */}\n      <br></br>\n      <br></br>\n      {/* <h1 className=\"large text-primary\">Please verify it is you, {name}</h1> */}\n      {/* <h2>Name: {name}</h2>\n      <h2>Email: {email}</h2>\n      <h2>Password: {password}</h2>\n      <h2>Code: {twoFactorAuthCode}</h2> */}\n      <h2>\n        Security code sent to: ******\n        {user.phoneNumber.substr(user.phoneNumber.length - 4)}\n      </h2>\n      {/* <h2>{id}</h2> */}\n      <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\n        <br></br>\n        <input\n          type=\"text\"\n          id=\"confirmationCode\"\n          maxLength=\"6\"\n          name=\"confirmationCode\"\n          value={confirmationCode}\n          onChange={handleCodeChange}\n        />{' '}\n        <br></br>\n        <button className=\"btn\">Resend Code</button>\n        <br></br>\n        <br></br>\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Continue\" />\n      </form>\n      <p className=\"my-1\">\n        {/* Already have an account? <Link to=\"/login\">Sign In</Link> */}\n      </p>\n    </Fragment>\n  );\n};\n\nTwoFactorLoginConfirmation.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n  twoFactorAuth: PropTypes.func.isRequired,\n  twoFactorAuthCheck: PropTypes.func.isRequired,\n  twoFactorApproved: PropTypes.bool,\n  login: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  twoFactorApproved: state.auth.twoFactorApproved,\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  twoFactorAuth,\n  twoFactorAuthCheck,\n  login,\n})(TwoFactorLoginConfirmation);\n","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/auth/GmalReLogin.js",["386","387","388","389","390","391","392"],"import React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport GoogleLogin from 'react-google-login';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/auth';\nimport FacebookLogin from './FacebookLogin';\nimport { setAlert } from '../../actions/alert';\nimport GmailLogin from './GmailLogin';\n\nexport const GmailReLogin = ({\n  login,\n  isAuthenticated,\n  setAlert,\n  recaptchaApproved,\n}) => {\n  const [userData, setUserData] = useState({\n    name: '',\n    email: '',\n    id: '',\n  });\n\n  const { name, email, id } = userData;\n\n  var human = recaptchaApproved;\n\n  // Redirect if logged in\n  if (isAuthenticated) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  const LoginButton = () => (\n    <GoogleLogin\n      clientId=\"753445575160-cajf8p3ntsdrkhj6s744a7gflmdscd0j.apps.googleusercontent.com\"\n      buttonText=\"Login with Google\"\n      onSuccess={responseGoogle}\n      onFailure={responseGoogle}\n      cookiePolicy={'single_host_origin'}\n      type=\"dark\"\n    />\n  );\n\n  const responseGoogle = (response) => {\n    setUserData({\n      name: response.profileObj.name,\n      email: response.profileObj.email,\n      id: response.googleId,\n    });\n    if (human == false) {\n      setAlert('Please verify you are human', 'danger');\n    } else {\n      login(response.profileObj.email, null, response.googleId);\n    }\n  };\n\n  return (\n    <Fragment>\n      <LoginButton />\n    </Fragment>\n  );\n};\n\nGmailReLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n  setAlert: PropTypes.func.isRequired,\n  recaptchaApproved: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  recaptchaApproved: state.auth.recaptchaApproved,\n});\n\nexport default connect(mapStateToProps, { login, setAlert })(GmailReLogin);\n","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/auth/Donations.js",["393","394","395","396","397","398","399","400","401","402","403","404","405","406","407"],"/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/auth/PayPal.js",["408"],"import React, { Fragment, useState, useRef, useEffect } from 'react';\n\nexport default function Paypal() {\n  const paypal = useRef();\n\n  useEffect(() => {\n    window.paypal\n      .Buttons({\n        createOrder: (data, actions, err) => {\n          return actions.order.create({\n            intent: 'CAPTURE',\n            purchase_units: [\n              {\n                description: 'Donations to Developer Connect',\n                amount: {\n                  currency_code: 'USD',\n                  value: 1.0,\n                },\n              },\n            ],\n          });\n        },\n        onApprove: async (data, actions) => {\n          const order = await actions.order.capture();\n          console.log(order);\n        },\n        onError: (err) => {\n          console.log(err);\n        },\n      })\n      .render(paypal.current);\n  }, []);\n\n  return (\n    <Fragment>\n      <div ref={paypal}></div>\n    </Fragment>\n  );\n}\n","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/profile-forms/EditPicture.js",["409","410","411","412","413"],"import React, { Fragment, useState, useEffect } from 'react';\nimport { Link, Redirect, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCurrentProfile } from '../../actions/profile';\nimport ImageUploader from 'react-images-upload';\nimport AvatarEditor from 'react-avatar-editor';\nimport Spinner from '../layout/Spinner';\nimport { uploadProfilePicture } from '../../actions/auth';\nimport { setAlert } from '../../actions/alert';\n\nconst EditPicture = ({\n  avatar,\n  addExperience,\n  history,\n  getCurrentProfile,\n  auth: { user },\n  profile: { profile, loading },\n  uploadProfilePicture,\n  setAlert,\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, [getCurrentProfile]);\n  const [pictureUrl, setPictureUrl] = useState();\n  const [picture, setPicture] = useState();\n  const [updated, setUpdated] = useState(false);\n  //   const onChange = (e) =>\n  //     setFormData({ ...formData, [e.target.name]: e.target.value });\n  const onPicChange = (picture) => {\n    console.log(picture);\n    setPicture(picture);\n  };\n\n  // if (updated) {\n  //   return <Redirect to=\"/dashboard\" />\n  // }\n\n  return loading && profile === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <h1 className=\"large text-primary\">Add / Change your Profile Picture</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-code-branch\"></i> Profile pictures are a great way\n        to connect individualy on a more personable level. Add and / or change\n        one to connect with your peers!\n      </p>\n      <form\n        className=\"form\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          uploadProfilePicture(picture);\n          // window.location.reload();\n          setUpdated(true);\n          setAlert(\"Your profile picture has been updated. Refresh to view\");\n          setPicture('');\n          // return <Redirect to=\"/dashboard\"></Redirect>\n          // getCurrentProfile();\n        }}\n      >\n        <div\n          style={{\n            // border: '2px solid black',\n            padding: '20px',\n            borderRadius: '500px',\n            textAlign: 'center',\n          }}\n        >\n          <strong>Your Current Profile Picture:</strong>\n          <br></br>\n          <br></br>\n          <img\n            src={user.avatar}\n            alt=\"user avatar\"\n            // className=\"round-img\"\n            style={{ maxWidth: '20rem' }}\n          />\n          {/* <AvatarEditor\n            image={avatar}\n            width={250}\n            height={250}\n            border={50}\n            color={[255, 255, 255, 0.6]} // RGBA\n            scale={1.2}\n            rotate={0}\n          /> */}\n        </div>\n        <br></br>\n        <div\n          style={{\n            border: '2px solid black',\n            padding: '20px',\n            textAlign: 'center',\n          }}\n        >\n          <strong>\n            Upload an Image Below to Choose a New Profile Picture:\n          </strong>\n          <ImageUploader\n            withIcon={true}\n            withPreview={true}\n            buttonText=\"Choose image\"\n            singleImage={true}\n            onChange={onPicChange}\n            imgExtension={['.jpg', '.jpeg', '.gif', '.png', '.gif']}\n            maxFileSize={5242880}\n          />\n        </div>\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nEditPicture.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  uploadProfilePicture: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n  setAlert: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile,\n  uploadProfilePicture,\n  setAlert,\n})(withRouter(EditPicture));\n","/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/auth/Admin.js",[],"/Users/samtoll/Desktop/Programming Projects/DeveloperConnect/client/src/components/auth/AdminProfileItem.js",["414"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { adminDeleteUser, deleteAccount } from '../../actions/profile';\n\nconst AdminProfileItem = ({\n  profile: {\n    user: { _id, name, avatar },\n    status,\n    company,\n    location,\n    skills,\n  },\n  adminDeleteUser,\n}) => {\n  return (\n    <div className=\"profile bg-light\">\n      <img src={avatar} alt=\"user avatar\" /> \n      {/* add \" className=\"round-img\" to change image back to round */}\n      <div>\n        <h2>{name}</h2>\n        <p>\n          {status} {company && <span> at {company}</span>}\n        </p>\n        <p className=\"my-1\">{location && <span>{location}</span>}</p>\n        <Link to={`/profile/${_id}`} className=\"btn btn-primary\">\n          View Profile\n        </Link>\n        <br></br>\n        <br></br>\n        <div className=\"my-w\">\n            <button className=\"btn btn-danger\" onClick={() => adminDeleteUser(_id, name)}>\n            <i className=\"fas fa-user-minus\"></i> Delete User\n            </button>\n        </div>\n      </div>\n      <ul>\n        {skills.slice(0, 4).map((skill, index) => (\n          <li key={index} className=\"text-primary\">\n            <i className=\"fas fa-check\"></i> {skill}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nAdminProfileItem.propTypes = {\n  profile: PropTypes.object.isRequired,\n  adminDeleteUser: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { adminDeleteUser })(AdminProfileItem);",{"ruleId":"415","replacedBy":"416"},{"ruleId":"417","replacedBy":"418"},{"ruleId":"419","severity":1,"message":"420","line":25,"column":10,"nodeType":"421","messageId":"422","endLine":25,"endColumn":18},{"ruleId":"423","severity":1,"message":"424","line":67,"column":12,"nodeType":"425","messageId":"426","endLine":67,"endColumn":14},{"ruleId":"423","severity":1,"message":"424","line":71,"column":19,"nodeType":"425","messageId":"426","endLine":71,"endColumn":21},{"ruleId":"419","severity":1,"message":"427","line":185,"column":11,"nodeType":"421","messageId":"422","endLine":185,"endColumn":17},{"ruleId":"419","severity":1,"message":"427","line":203,"column":11,"nodeType":"421","messageId":"422","endLine":203,"endColumn":17},{"ruleId":"419","severity":1,"message":"428","line":271,"column":11,"nodeType":"421","messageId":"422","endLine":271,"endColumn":19},{"ruleId":"419","severity":1,"message":"429","line":16,"column":8,"nodeType":"421","messageId":"422","endLine":16,"endColumn":34},{"ruleId":"419","severity":1,"message":"430","line":19,"column":10,"nodeType":"421","messageId":"422","endLine":19,"endColumn":16},{"ruleId":"419","severity":1,"message":"431","line":19,"column":38,"nodeType":"421","messageId":"422","endLine":19,"endColumn":52},{"ruleId":"419","severity":1,"message":"432","line":19,"column":54,"nodeType":"421","messageId":"422","endLine":19,"endColumn":68},{"ruleId":"419","severity":1,"message":"433","line":46,"column":9,"nodeType":"421","messageId":"422","endLine":46,"endColumn":29},{"ruleId":"423","severity":1,"message":"424","line":47,"column":20,"nodeType":"425","messageId":"426","endLine":47,"endColumn":22},{"ruleId":"423","severity":1,"message":"424","line":49,"column":27,"nodeType":"425","messageId":"426","endLine":49,"endColumn":29},{"ruleId":"423","severity":1,"message":"424","line":53,"column":27,"nodeType":"425","messageId":"426","endLine":53,"endColumn":29},{"ruleId":"423","severity":1,"message":"424","line":69,"column":15,"nodeType":"425","messageId":"426","endLine":69,"endColumn":17},{"ruleId":"423","severity":1,"message":"424","line":22,"column":26,"nodeType":"425","messageId":"426","endLine":22,"endColumn":28},{"ruleId":"419","severity":1,"message":"434","line":10,"column":10,"nodeType":"421","messageId":"422","endLine":10,"endColumn":19},{"ruleId":"419","severity":1,"message":"431","line":11,"column":38,"nodeType":"421","messageId":"422","endLine":11,"endColumn":52},{"ruleId":"419","severity":1,"message":"432","line":11,"column":54,"nodeType":"421","messageId":"422","endLine":11,"endColumn":68},{"ruleId":"423","severity":1,"message":"424","line":27,"column":20,"nodeType":"425","messageId":"426","endLine":27,"endColumn":22},{"ruleId":"423","severity":1,"message":"424","line":30,"column":27,"nodeType":"425","messageId":"426","endLine":30,"endColumn":29},{"ruleId":"423","severity":1,"message":"424","line":35,"column":27,"nodeType":"425","messageId":"426","endLine":35,"endColumn":29},{"ruleId":"423","severity":1,"message":"424","line":38,"column":27,"nodeType":"425","messageId":"426","endLine":38,"endColumn":29},{"ruleId":"423","severity":1,"message":"424","line":42,"column":16,"nodeType":"425","messageId":"426","endLine":42,"endColumn":18},{"ruleId":"419","severity":1,"message":"435","line":34,"column":9,"nodeType":"421","messageId":"422","endLine":34,"endColumn":23},{"ruleId":"436","severity":1,"message":"437","line":67,"column":6,"nodeType":"438","endLine":67,"endColumn":34,"suggestions":"439"},{"ruleId":"440","severity":1,"message":"441","line":70,"column":21,"nodeType":"442","messageId":"443","endLine":70,"endColumn":22,"suggestions":"444"},{"ruleId":"440","severity":1,"message":"441","line":70,"column":23,"nodeType":"442","messageId":"443","endLine":70,"endColumn":24,"suggestions":"445"},{"ruleId":"440","severity":1,"message":"446","line":70,"column":41,"nodeType":"442","messageId":"443","endLine":70,"endColumn":42,"suggestions":"447"},{"ruleId":"440","severity":1,"message":"441","line":70,"column":46,"nodeType":"442","messageId":"443","endLine":70,"endColumn":47,"suggestions":"448"},{"ruleId":"440","severity":1,"message":"441","line":70,"column":56,"nodeType":"442","messageId":"443","endLine":70,"endColumn":57,"suggestions":"449"},{"ruleId":"440","severity":1,"message":"441","line":70,"column":63,"nodeType":"442","messageId":"443","endLine":70,"endColumn":64,"suggestions":"450"},{"ruleId":"440","severity":1,"message":"441","line":74,"column":24,"nodeType":"442","messageId":"443","endLine":74,"endColumn":25,"suggestions":"451"},{"ruleId":"440","severity":1,"message":"441","line":74,"column":26,"nodeType":"442","messageId":"443","endLine":74,"endColumn":27,"suggestions":"452"},{"ruleId":"440","severity":1,"message":"441","line":74,"column":51,"nodeType":"442","messageId":"443","endLine":74,"endColumn":52,"suggestions":"453"},{"ruleId":"440","severity":1,"message":"454","line":74,"column":59,"nodeType":"442","messageId":"443","endLine":74,"endColumn":60,"suggestions":"455"},{"ruleId":"440","severity":1,"message":"441","line":74,"column":65,"nodeType":"442","messageId":"443","endLine":74,"endColumn":66,"suggestions":"456"},{"ruleId":"440","severity":1,"message":"441","line":74,"column":77,"nodeType":"442","messageId":"443","endLine":74,"endColumn":78,"suggestions":"457"},{"ruleId":"440","severity":1,"message":"454","line":74,"column":86,"nodeType":"442","messageId":"443","endLine":74,"endColumn":87,"suggestions":"458"},{"ruleId":"440","severity":1,"message":"459","line":74,"column":88,"nodeType":"442","messageId":"443","endLine":74,"endColumn":89,"suggestions":"460"},{"ruleId":"440","severity":1,"message":"441","line":74,"column":92,"nodeType":"442","messageId":"443","endLine":74,"endColumn":93,"suggestions":"461"},{"ruleId":"440","severity":1,"message":"462","line":74,"column":110,"nodeType":"442","messageId":"443","endLine":74,"endColumn":111,"suggestions":"463"},{"ruleId":"440","severity":1,"message":"464","line":74,"column":118,"nodeType":"442","messageId":"443","endLine":74,"endColumn":119,"suggestions":"465"},{"ruleId":"440","severity":1,"message":"454","line":74,"column":127,"nodeType":"442","messageId":"443","endLine":74,"endColumn":128,"suggestions":"466"},{"ruleId":"440","severity":1,"message":"459","line":74,"column":129,"nodeType":"442","messageId":"443","endLine":74,"endColumn":130,"suggestions":"467"},{"ruleId":"440","severity":1,"message":"441","line":78,"column":13,"nodeType":"442","messageId":"443","endLine":78,"endColumn":14,"suggestions":"468"},{"ruleId":"440","severity":1,"message":"441","line":78,"column":15,"nodeType":"442","messageId":"443","endLine":78,"endColumn":16,"suggestions":"469"},{"ruleId":"440","severity":1,"message":"441","line":78,"column":28,"nodeType":"442","messageId":"443","endLine":78,"endColumn":29,"suggestions":"470"},{"ruleId":"440","severity":1,"message":"441","line":78,"column":46,"nodeType":"442","messageId":"443","endLine":78,"endColumn":47,"suggestions":"471"},{"ruleId":"419","severity":1,"message":"472","line":100,"column":28,"nodeType":"421","messageId":"422","endLine":100,"endColumn":47},{"ruleId":"419","severity":1,"message":"473","line":109,"column":5,"nodeType":"421","messageId":"422","endLine":109,"endColumn":17},{"ruleId":"423","severity":1,"message":"424","line":118,"column":51,"nodeType":"425","messageId":"426","endLine":118,"endColumn":53},{"ruleId":"423","severity":1,"message":"424","line":120,"column":55,"nodeType":"425","messageId":"426","endLine":120,"endColumn":57},{"ruleId":"423","severity":1,"message":"424","line":122,"column":55,"nodeType":"425","messageId":"426","endLine":122,"endColumn":57},{"ruleId":"419","severity":1,"message":"474","line":18,"column":8,"nodeType":"421","messageId":"422","endLine":18,"endColumn":21},{"ruleId":"419","severity":1,"message":"475","line":22,"column":8,"nodeType":"421","messageId":"422","endLine":22,"endColumn":18},{"ruleId":"419","severity":1,"message":"430","line":27,"column":10,"nodeType":"421","messageId":"422","endLine":27,"endColumn":16},{"ruleId":"419","severity":1,"message":"431","line":27,"column":38,"nodeType":"421","messageId":"422","endLine":27,"endColumn":52},{"ruleId":"419","severity":1,"message":"432","line":27,"column":54,"nodeType":"421","messageId":"422","endLine":27,"endColumn":68},{"ruleId":"419","severity":1,"message":"476","line":57,"column":10,"nodeType":"421","messageId":"422","endLine":57,"endColumn":18},{"ruleId":"419","severity":1,"message":"477","line":57,"column":20,"nodeType":"421","messageId":"422","endLine":57,"endColumn":31},{"ruleId":"419","severity":1,"message":"478","line":65,"column":10,"nodeType":"421","messageId":"422","endLine":65,"endColumn":27},{"ruleId":"419","severity":1,"message":"479","line":65,"column":29,"nodeType":"421","messageId":"422","endLine":65,"endColumn":49},{"ruleId":"419","severity":1,"message":"480","line":67,"column":10,"nodeType":"421","messageId":"422","endLine":67,"endColumn":19},{"ruleId":"419","severity":1,"message":"481","line":67,"column":21,"nodeType":"421","messageId":"422","endLine":67,"endColumn":33},{"ruleId":"419","severity":1,"message":"482","line":76,"column":5,"nodeType":"421","messageId":"422","endLine":76,"endColumn":19},{"ruleId":"423","severity":1,"message":"424","line":93,"column":22,"nodeType":"425","messageId":"426","endLine":93,"endColumn":24},{"ruleId":"419","severity":1,"message":"433","line":113,"column":9,"nodeType":"421","messageId":"422","endLine":113,"endColumn":29},{"ruleId":"423","severity":1,"message":"424","line":114,"column":20,"nodeType":"425","messageId":"426","endLine":114,"endColumn":22},{"ruleId":"423","severity":1,"message":"424","line":116,"column":27,"nodeType":"425","messageId":"426","endLine":116,"endColumn":29},{"ruleId":"423","severity":1,"message":"424","line":120,"column":27,"nodeType":"425","messageId":"426","endLine":120,"endColumn":29},{"ruleId":"419","severity":1,"message":"483","line":175,"column":9,"nodeType":"421","messageId":"422","endLine":175,"endColumn":20},{"ruleId":"436","severity":1,"message":"484","line":14,"column":6,"nodeType":"438","endLine":14,"endColumn":15,"suggestions":"485"},{"ruleId":"486","severity":1,"message":"487","line":4,"column":1,"nodeType":"488","endLine":11,"endColumn":3},{"ruleId":"489","severity":1,"message":"490","line":6,"column":5,"nodeType":"491","endLine":9,"endColumn":7},{"ruleId":"492","severity":1,"message":"493","line":39,"column":11,"nodeType":"491","endLine":39,"endColumn":65},{"ruleId":"419","severity":1,"message":"494","line":158,"column":11,"nodeType":"421","messageId":"422","endLine":158,"endColumn":14},{"ruleId":"419","severity":1,"message":"420","line":1,"column":17,"nodeType":"421","messageId":"422","endLine":1,"endColumn":25},{"ruleId":"486","severity":1,"message":"495","line":32,"column":1,"nodeType":"488","endLine":114,"endColumn":2},{"ruleId":"496","severity":1,"message":"497","line":106,"column":5,"nodeType":"498","messageId":"426","endLine":110,"endColumn":9},{"ruleId":"486","severity":1,"message":"495","line":5,"column":1,"nodeType":"488","endLine":16,"endColumn":2},{"ruleId":"486","severity":1,"message":"495","line":18,"column":1,"nodeType":"488","endLine":57,"endColumn":2},{"ruleId":"419","severity":1,"message":"499","line":11,"column":10,"nodeType":"421","messageId":"422","endLine":11,"endColumn":22},{"ruleId":"486","severity":1,"message":"495","line":20,"column":1,"nodeType":"488","endLine":82,"endColumn":2},{"ruleId":"419","severity":1,"message":"500","line":3,"column":10,"nodeType":"421","messageId":"422","endLine":3,"endColumn":14},{"ruleId":"419","severity":1,"message":"501","line":21,"column":8,"nodeType":"421","messageId":"422","endLine":21,"endColumn":15},{"ruleId":"419","severity":1,"message":"502","line":21,"column":17,"nodeType":"421","messageId":"422","endLine":21,"endColumn":27},{"ruleId":"419","severity":1,"message":"503","line":23,"column":9,"nodeType":"421","messageId":"422","endLine":23,"endColumn":13},{"ruleId":"419","severity":1,"message":"504","line":2,"column":8,"nodeType":"421","messageId":"422","endLine":2,"endColumn":29},{"ruleId":"419","severity":1,"message":"505","line":3,"column":16,"nodeType":"421","messageId":"422","endLine":3,"endColumn":24},{"ruleId":"419","severity":1,"message":"474","line":12,"column":8,"nodeType":"421","messageId":"422","endLine":12,"endColumn":21},{"ruleId":"419","severity":1,"message":"506","line":13,"column":8,"nodeType":"421","messageId":"422","endLine":13,"endColumn":19},{"ruleId":"419","severity":1,"message":"507","line":45,"column":9,"nodeType":"421","messageId":"422","endLine":45,"endColumn":17},{"ruleId":"423","severity":1,"message":"424","line":63,"column":22,"nodeType":"425","messageId":"426","endLine":63,"endColumn":24},{"ruleId":"423","severity":1,"message":"424","line":140,"column":26,"nodeType":"425","messageId":"426","endLine":140,"endColumn":28},{"ruleId":"419","severity":1,"message":"500","line":2,"column":10,"nodeType":"421","messageId":"422","endLine":2,"endColumn":14},{"ruleId":"419","severity":1,"message":"474","line":7,"column":8,"nodeType":"421","messageId":"422","endLine":7,"endColumn":21},{"ruleId":"419","severity":1,"message":"508","line":22,"column":11,"nodeType":"421","messageId":"422","endLine":22,"endColumn":15},{"ruleId":"419","severity":1,"message":"509","line":22,"column":17,"nodeType":"421","messageId":"422","endLine":22,"endColumn":22},{"ruleId":"419","severity":1,"message":"510","line":22,"column":24,"nodeType":"421","messageId":"422","endLine":22,"endColumn":26},{"ruleId":"423","severity":1,"message":"424","line":47,"column":15,"nodeType":"425","messageId":"426","endLine":47,"endColumn":17},{"ruleId":"419","severity":1,"message":"500","line":4,"column":10,"nodeType":"421","messageId":"422","endLine":4,"endColumn":14},{"ruleId":"419","severity":1,"message":"434","line":9,"column":10,"nodeType":"421","messageId":"422","endLine":9,"endColumn":19},{"ruleId":"419","severity":1,"message":"430","line":10,"column":10,"nodeType":"421","messageId":"422","endLine":10,"endColumn":16},{"ruleId":"419","severity":1,"message":"431","line":10,"column":38,"nodeType":"421","messageId":"422","endLine":10,"endColumn":52},{"ruleId":"419","severity":1,"message":"432","line":10,"column":54,"nodeType":"421","messageId":"422","endLine":10,"endColumn":68},{"ruleId":"419","severity":1,"message":"433","line":54,"column":9,"nodeType":"421","messageId":"422","endLine":54,"endColumn":29},{"ruleId":"423","severity":1,"message":"424","line":55,"column":20,"nodeType":"425","messageId":"426","endLine":55,"endColumn":22},{"ruleId":"423","severity":1,"message":"424","line":57,"column":27,"nodeType":"425","messageId":"426","endLine":57,"endColumn":29},{"ruleId":"423","severity":1,"message":"424","line":61,"column":27,"nodeType":"425","messageId":"426","endLine":61,"endColumn":29},{"ruleId":"419","severity":1,"message":"500","line":4,"column":10,"nodeType":"421","messageId":"422","endLine":4,"endColumn":14},{"ruleId":"419","severity":1,"message":"511","line":8,"column":3,"nodeType":"421","messageId":"422","endLine":8,"endColumn":24},{"ruleId":"419","severity":1,"message":"512","line":13,"column":8,"nodeType":"421","messageId":"422","endLine":13,"endColumn":18},{"ruleId":"436","severity":1,"message":"513","line":31,"column":6,"nodeType":"438","endLine":31,"endColumn":21,"suggestions":"514"},{"ruleId":"419","severity":1,"message":"478","line":34,"column":10,"nodeType":"421","messageId":"422","endLine":34,"endColumn":27},{"ruleId":"419","severity":1,"message":"479","line":34,"column":29,"nodeType":"421","messageId":"422","endLine":34,"endColumn":49},{"ruleId":"419","severity":1,"message":"515","line":36,"column":7,"nodeType":"421","messageId":"422","endLine":36,"endColumn":15},{"ruleId":"419","severity":1,"message":"516","line":38,"column":9,"nodeType":"421","messageId":"422","endLine":38,"endColumn":30},{"ruleId":"419","severity":1,"message":"500","line":4,"column":10,"nodeType":"421","messageId":"422","endLine":4,"endColumn":14},{"ruleId":"419","severity":1,"message":"511","line":8,"column":3,"nodeType":"421","messageId":"422","endLine":8,"endColumn":24},{"ruleId":"419","severity":1,"message":"512","line":12,"column":8,"nodeType":"421","messageId":"422","endLine":12,"endColumn":18},{"ruleId":"436","severity":1,"message":"517","line":27,"column":6,"nodeType":"438","endLine":27,"endColumn":21,"suggestions":"518"},{"ruleId":"419","severity":1,"message":"478","line":30,"column":10,"nodeType":"421","messageId":"422","endLine":30,"endColumn":27},{"ruleId":"419","severity":1,"message":"479","line":30,"column":29,"nodeType":"421","messageId":"422","endLine":30,"endColumn":49},{"ruleId":"419","severity":1,"message":"516","line":32,"column":9,"nodeType":"421","messageId":"422","endLine":32,"endColumn":30},{"ruleId":"419","severity":1,"message":"519","line":53,"column":9,"nodeType":"421","messageId":"422","endLine":53,"endColumn":20},{"ruleId":"419","severity":1,"message":"500","line":2,"column":10,"nodeType":"421","messageId":"422","endLine":2,"endColumn":14},{"ruleId":"419","severity":1,"message":"474","line":7,"column":8,"nodeType":"421","messageId":"422","endLine":7,"endColumn":21},{"ruleId":"419","severity":1,"message":"475","line":9,"column":8,"nodeType":"421","messageId":"422","endLine":9,"endColumn":18},{"ruleId":"419","severity":1,"message":"508","line":23,"column":11,"nodeType":"421","messageId":"422","endLine":23,"endColumn":15},{"ruleId":"419","severity":1,"message":"509","line":23,"column":17,"nodeType":"421","messageId":"422","endLine":23,"endColumn":22},{"ruleId":"419","severity":1,"message":"510","line":23,"column":24,"nodeType":"421","messageId":"422","endLine":23,"endColumn":26},{"ruleId":"423","severity":1,"message":"424","line":49,"column":15,"nodeType":"425","messageId":"426","endLine":49,"endColumn":17},{"ruleId":"419","severity":1,"message":"520","line":1,"column":37,"nodeType":"421","messageId":"422","endLine":1,"endColumn":43},{"ruleId":"419","severity":1,"message":"500","line":2,"column":10,"nodeType":"421","messageId":"422","endLine":2,"endColumn":14},{"ruleId":"419","severity":1,"message":"505","line":2,"column":16,"nodeType":"421","messageId":"422","endLine":2,"endColumn":24},{"ruleId":"419","severity":1,"message":"506","line":4,"column":8,"nodeType":"421","messageId":"422","endLine":4,"endColumn":19},{"ruleId":"419","severity":1,"message":"521","line":8,"column":8,"nodeType":"421","messageId":"422","endLine":8,"endColumn":14},{"ruleId":"419","severity":1,"message":"522","line":9,"column":8,"nodeType":"421","messageId":"422","endLine":9,"endColumn":21},{"ruleId":"419","severity":1,"message":"430","line":11,"column":10,"nodeType":"421","messageId":"422","endLine":11,"endColumn":16},{"ruleId":"419","severity":1,"message":"523","line":11,"column":18,"nodeType":"421","messageId":"422","endLine":11,"endColumn":36},{"ruleId":"419","severity":1,"message":"431","line":11,"column":38,"nodeType":"421","messageId":"422","endLine":11,"endColumn":52},{"ruleId":"419","severity":1,"message":"432","line":11,"column":54,"nodeType":"421","messageId":"422","endLine":11,"endColumn":68},{"ruleId":"419","severity":1,"message":"524","line":15,"column":18,"nodeType":"421","messageId":"422","endLine":15,"endColumn":27},{"ruleId":"419","severity":1,"message":"525","line":16,"column":10,"nodeType":"421","messageId":"422","endLine":16,"endColumn":15},{"ruleId":"419","severity":1,"message":"526","line":16,"column":17,"nodeType":"421","messageId":"422","endLine":16,"endColumn":25},{"ruleId":"419","severity":1,"message":"527","line":17,"column":10,"nodeType":"421","messageId":"422","endLine":17,"endColumn":19},{"ruleId":"419","severity":1,"message":"528","line":17,"column":21,"nodeType":"421","messageId":"422","endLine":17,"endColumn":33},{"ruleId":"419","severity":1,"message":"529","line":1,"column":27,"nodeType":"421","messageId":"422","endLine":1,"endColumn":35},{"ruleId":"419","severity":1,"message":"505","line":2,"column":16,"nodeType":"421","messageId":"422","endLine":2,"endColumn":24},{"ruleId":"419","severity":1,"message":"530","line":7,"column":8,"nodeType":"421","messageId":"422","endLine":7,"endColumn":20},{"ruleId":"419","severity":1,"message":"531","line":25,"column":10,"nodeType":"421","messageId":"422","endLine":25,"endColumn":20},{"ruleId":"419","severity":1,"message":"532","line":25,"column":22,"nodeType":"421","messageId":"422","endLine":25,"endColumn":35},{"ruleId":"419","severity":1,"message":"533","line":27,"column":10,"nodeType":"421","messageId":"422","endLine":27,"endColumn":17},{"ruleId":"419","severity":1,"message":"534","line":5,"column":27,"nodeType":"421","messageId":"422","endLine":5,"endColumn":40},"no-native-reassign",["535"],"no-negated-in-lhs",["536"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'errors' is assigned a value but never used.","'response' is assigned a value but never used.","'TwoFactorLoginConfirmation' is defined but never used.","'Widget' is defined but never used.","'addLinkSnippet' is defined but never used.","'addUserMessage' is defined but never used.","'handleNewUserMessage' is assigned a value but never used.","'CometChat' is defined but never used.","'countryOptions' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.instagram', 'profile.linkedin', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', 'profile.website', and 'profile.youtube'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'profile.company', you can also switch to useReducer instead of useState and read 'profile.company' in the reducer.","ArrayExpression",["537"],"no-useless-escape","Unnecessary escape character: \\/.","TemplateElement","unnecessaryEscape",["538","539"],["540","541"],"Unnecessary escape character: \\..",["542","543"],["544","545"],["546","547"],["548","549"],["550","551"],["552","553"],["554","555"],"Unnecessary escape character: \\w.",["556","557"],["558","559"],["560","561"],["562","563"],"Unnecessary escape character: \\-.",["564","565"],["566","567"],"Unnecessary escape character: \\?.",["568","569"],"Unnecessary escape character: \\d.",["570","571"],["572","573"],["574","575"],["576","577"],["578","579"],["580","581"],["582","583"],"'setValidSocialLinks' is assigned a value but never used.","'youtubeValid' is assigned a value but never used.","'FacebookLogin' is defined but never used.","'GmailLogin' is defined but never used.","'userData' is assigned a value but never used.","'setUserData' is assigned a value but never used.","'twoFactorAuthCode' is assigned a value but never used.","'setTwoFactorAuthCode' is assigned a value but never used.","'googleObj' is assigned a value but never used.","'setGoogleObj' is assigned a value but never used.","'facebookOption' is assigned a value but never used.","'loginGoogle' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["584"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'res' is assigned a value but never used.","Unexpected default export of anonymous function","no-duplicate-case","Duplicate case label.","SwitchCase","'defineLocale' is defined but never used.","'Link' is defined but never used.","'picture' is assigned a value but never used.","'setPicture' is assigned a value but never used.","'type' is assigned a value but never used.","'GoogleLoginWithButton' is defined but never used.","'Redirect' is defined but never used.","'GoogleLogin' is defined but never used.","'onChange' is assigned a value but never used.","'name' is assigned a value but never used.","'email' is assigned a value but never used.","'id' is assigned a value but never used.","'dispatchExpireCaptcha' is defined but never used.","'PhoneInput' is defined but never used.","React Hook useEffect has missing dependencies: 'email' and 'phoneNumber'. Either include them or remove the dependency array.",["585"],"'approved' is assigned a value but never used.","'checkConfirmationCode' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'email' and 'user.phoneNumber'. Either include them or remove the dependency array.",["586"],"'backClicked' is assigned a value but never used.","'useRef' is defined but never used.","'PayPal' is defined but never used.","'CurrencyInput' is defined but never used.","'addResponseMessage' is defined but never used.","'setAmount' is assigned a value but never used.","'money' is assigned a value but never used.","'setMoney' is assigned a value but never used.","'submitted' is assigned a value but never used.","'setSubmitted' is assigned a value but never used.","'useState' is defined but never used.","'AvatarEditor' is defined but never used.","'pictureUrl' is assigned a value but never used.","'setPictureUrl' is assigned a value but never used.","'updated' is assigned a value but never used.","'deleteAccount' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"587","fix":"588"},{"messageId":"589","fix":"590","desc":"591"},{"messageId":"592","fix":"593","desc":"594"},{"messageId":"589","fix":"595","desc":"591"},{"messageId":"592","fix":"596","desc":"594"},{"messageId":"589","fix":"597","desc":"591"},{"messageId":"592","fix":"598","desc":"594"},{"messageId":"589","fix":"599","desc":"591"},{"messageId":"592","fix":"600","desc":"594"},{"messageId":"589","fix":"601","desc":"591"},{"messageId":"592","fix":"602","desc":"594"},{"messageId":"589","fix":"603","desc":"591"},{"messageId":"592","fix":"604","desc":"594"},{"messageId":"589","fix":"605","desc":"591"},{"messageId":"592","fix":"606","desc":"594"},{"messageId":"589","fix":"607","desc":"591"},{"messageId":"592","fix":"608","desc":"594"},{"messageId":"589","fix":"609","desc":"591"},{"messageId":"592","fix":"610","desc":"594"},{"messageId":"589","fix":"611","desc":"591"},{"messageId":"592","fix":"612","desc":"594"},{"messageId":"589","fix":"613","desc":"591"},{"messageId":"592","fix":"614","desc":"594"},{"messageId":"589","fix":"615","desc":"591"},{"messageId":"592","fix":"616","desc":"594"},{"messageId":"589","fix":"617","desc":"591"},{"messageId":"592","fix":"618","desc":"594"},{"messageId":"589","fix":"619","desc":"591"},{"messageId":"592","fix":"620","desc":"594"},{"messageId":"589","fix":"621","desc":"591"},{"messageId":"592","fix":"622","desc":"594"},{"messageId":"589","fix":"623","desc":"591"},{"messageId":"592","fix":"624","desc":"594"},{"messageId":"589","fix":"625","desc":"591"},{"messageId":"592","fix":"626","desc":"594"},{"messageId":"589","fix":"627","desc":"591"},{"messageId":"592","fix":"628","desc":"594"},{"messageId":"589","fix":"629","desc":"591"},{"messageId":"592","fix":"630","desc":"594"},{"messageId":"589","fix":"631","desc":"591"},{"messageId":"592","fix":"632","desc":"594"},{"messageId":"589","fix":"633","desc":"591"},{"messageId":"592","fix":"634","desc":"594"},{"messageId":"589","fix":"635","desc":"591"},{"messageId":"592","fix":"636","desc":"594"},{"messageId":"589","fix":"637","desc":"591"},{"messageId":"592","fix":"638","desc":"594"},{"desc":"639","fix":"640"},{"desc":"641","fix":"642"},{"desc":"643","fix":"644"},"Update the dependencies array to be: [loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.social, profile.linkedin, profile.youtube, profile.instagram]",{"range":"645","text":"646"},"removeEscape",{"range":"647","text":"648"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"649","text":"650"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"651","text":"648"},{"range":"652","text":"650"},{"range":"653","text":"648"},{"range":"654","text":"650"},{"range":"655","text":"648"},{"range":"656","text":"650"},{"range":"657","text":"648"},{"range":"658","text":"650"},{"range":"659","text":"648"},{"range":"660","text":"650"},{"range":"661","text":"648"},{"range":"662","text":"650"},{"range":"663","text":"648"},{"range":"664","text":"650"},{"range":"665","text":"648"},{"range":"666","text":"650"},{"range":"667","text":"648"},{"range":"668","text":"650"},{"range":"669","text":"648"},{"range":"670","text":"650"},{"range":"671","text":"648"},{"range":"672","text":"650"},{"range":"673","text":"648"},{"range":"674","text":"650"},{"range":"675","text":"648"},{"range":"676","text":"650"},{"range":"677","text":"648"},{"range":"678","text":"650"},{"range":"679","text":"648"},{"range":"680","text":"650"},{"range":"681","text":"648"},{"range":"682","text":"650"},{"range":"683","text":"648"},{"range":"684","text":"650"},{"range":"685","text":"648"},{"range":"686","text":"650"},{"range":"687","text":"648"},{"range":"688","text":"650"},{"range":"689","text":"648"},{"range":"690","text":"650"},{"range":"691","text":"648"},{"range":"692","text":"650"},{"range":"693","text":"648"},{"range":"694","text":"650"},"Update the dependencies array to be: [getPost, match.params.id]",{"range":"695","text":"696"},"Update the dependencies array to be: [email, phoneNumber, twoFactorAuth]",{"range":"697","text":"698"},"Update the dependencies array to be: [email, twoFactorAuth, user.phoneNumber]",{"range":"699","text":"700"},[2287,2315],"[loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.social, profile.linkedin, profile.youtube, profile.instagram]",[2397,2398],"",[2397,2397],"\\",[2399,2400],[2399,2399],[2417,2418],[2417,2417],[2422,2423],[2422,2422],[2432,2433],[2432,2432],[2439,2440],[2439,2439],[2536,2537],[2536,2536],[2538,2539],[2538,2538],[2563,2564],[2563,2563],[2571,2572],[2571,2571],[2577,2578],[2577,2577],[2589,2590],[2589,2589],[2598,2599],[2598,2598],[2600,2601],[2600,2600],[2604,2605],[2604,2604],[2622,2623],[2622,2622],[2630,2631],[2630,2630],[2639,2640],[2639,2639],[2641,2642],[2641,2641],[2712,2713],[2712,2712],[2714,2715],[2714,2714],[2727,2728],[2727,2727],[2745,2746],[2745,2745],[499,508],"[getPost, match.params.id]",[748,763],"[email, phoneNumber, twoFactorAuth]",[695,710],"[email, twoFactorAuth, user.phoneNumber]"]