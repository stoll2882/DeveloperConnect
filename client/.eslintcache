[{"/Users/samtoll/Desktop/DeveloperConnect/client/src/index.js":"1","/Users/samtoll/Desktop/DeveloperConnect/client/src/App.js":"2","/Users/samtoll/Desktop/DeveloperConnect/client/src/components/layout/Navbar.js":"3","/Users/samtoll/Desktop/DeveloperConnect/client/src/components/layout/Landing.js":"4","/Users/samtoll/Desktop/DeveloperConnect/client/src/components/auth/Register.js":"5","/Users/samtoll/Desktop/DeveloperConnect/client/src/components/auth/Login.js":"6","/Users/samtoll/Desktop/DeveloperConnect/client/src/store.js":"7","/Users/samtoll/Desktop/DeveloperConnect/client/src/reducers/index.js":"8","/Users/samtoll/Desktop/DeveloperConnect/client/src/reducers/alert.js":"9","/Users/samtoll/Desktop/DeveloperConnect/client/src/actions/types.js":"10","/Users/samtoll/Desktop/DeveloperConnect/client/src/actions/alert.js":"11","/Users/samtoll/Desktop/DeveloperConnect/client/src/components/layout/alert.js":"12","/Users/samtoll/Desktop/DeveloperConnect/client/src/components/layout/Alert.js":"13","/Users/samtoll/Desktop/DeveloperConnect/client/src/actions/auth.js":"14","/Users/samtoll/Desktop/DeveloperConnect/client/src/reducers/auth.js":"15","/Users/samtoll/Desktop/DeveloperConnect/client/src/utils/setAuthToken.js":"16","/Users/samtoll/Desktop/DeveloperConnect/client/src/utils/api.js":"17","/Users/samtoll/Desktop/DeveloperConnect/client/src/components/dashboard/Dashboard.js":"18","/Users/samtoll/Desktop/DeveloperConnect/client/src/components/routing/PrivateRoute.js":"19","/Users/samtoll/Desktop/DeveloperConnect/client/src/reducers/profile.js":"20","/Users/samtoll/Desktop/DeveloperConnect/client/src/actions/profile.js":"21","/Users/samtoll/Desktop/DeveloperConnect/client/src/components/layout/Spinner.js":"22","/Users/samtoll/Desktop/DeveloperConnect/client/src/components/profile-forms/CreateProfile.js":"23","/Users/samtoll/Desktop/DeveloperConnect/client/src/components/dashboard/DashboardActions.js":"24","/Users/samtoll/Desktop/DeveloperConnect/client/src/components/profile-forms/EditProfile.js":"25","/Users/samtoll/Desktop/DeveloperConnect/client/src/components/profile-forms/AddExperience.js":"26","/Users/samtoll/Desktop/DeveloperConnect/client/src/components/profile-forms/AddEducation.js":"27","/Users/samtoll/Desktop/DeveloperConnect/client/src/components/dashboard/Experience.js":"28","/Users/samtoll/Desktop/DeveloperConnect/client/src/components/dashboard/Education.js":"29","/Users/samtoll/Desktop/DeveloperConnect/client/src/components/profiles/Profiles.js":"30","/Users/samtoll/Desktop/DeveloperConnect/client/src/components/profiles/ProfileItem.js":"31","/Users/samtoll/Desktop/DeveloperConnect/client/src/components/profile/Profile.js":"32","/Users/samtoll/Desktop/DeveloperConnect/client/src/components/profile/ProfileTop.js":"33","/Users/samtoll/Desktop/DeveloperConnect/client/src/components/profile/ProfileAbout.js":"34","/Users/samtoll/Desktop/DeveloperConnect/client/src/components/profile/ProfileExperience.js":"35","/Users/samtoll/Desktop/DeveloperConnect/client/src/components/profile/ProfileEducation.js":"36","/Users/samtoll/Desktop/DeveloperConnect/client/src/components/profile/ProfileGitHub.js":"37","/Users/samtoll/Desktop/DeveloperConnect/client/src/components/profile/ProfileGithub.js":"38","/Users/samtoll/Desktop/DeveloperConnect/client/src/components/posts/Posts.js":"39","/Users/samtoll/Desktop/DeveloperConnect/client/src/actions/post.js":"40","/Users/samtoll/Desktop/DeveloperConnect/client/src/reducers/post.js":"41","/Users/samtoll/Desktop/DeveloperConnect/client/src/components/posts/PostItem.js":"42","/Users/samtoll/Desktop/DeveloperConnect/client/src/components/posts/PostForm.js":"43","/Users/samtoll/Desktop/DeveloperConnect/client/src/components/post/Post.js":"44","/Users/samtoll/Desktop/DeveloperConnect/client/src/components/post/CommentForm.js":"45","/Users/samtoll/Desktop/DeveloperConnect/client/src/components/post/CommentItem.js":"46"},{"size":217,"mtime":1611532208896,"results":"47","hashOfConfig":"48"},{"size":2794,"mtime":1612219497229,"results":"49","hashOfConfig":"48"},{"size":1565,"mtime":1612215156215,"results":"50","hashOfConfig":"48"},{"size":1177,"mtime":1611873463829,"results":"51","hashOfConfig":"48"},{"size":3450,"mtime":1611789277513,"results":"52","hashOfConfig":"48"},{"size":1974,"mtime":1611789520106,"results":"53","hashOfConfig":"48"},{"size":383,"mtime":1611566237888,"results":"54","hashOfConfig":"48"},{"size":231,"mtime":1612214497296,"results":"55","hashOfConfig":"48"},{"size":375,"mtime":1611566943014,"results":"56","hashOfConfig":"48"},{"size":1056,"mtime":1612052751023,"results":"57","hashOfConfig":"48"},{"size":345,"mtime":1611568721177,"results":"58","hashOfConfig":"48"},{"size":441,"mtime":1611569741976,"results":"59","hashOfConfig":"48"},{"size":441,"mtime":1611569741976,"results":"60","hashOfConfig":"48"},{"size":2042,"mtime":1611874298751,"results":"61","hashOfConfig":"48"},{"size":1066,"mtime":1612052869587,"results":"62","hashOfConfig":"48"},{"size":242,"mtime":1611636702294,"results":"63","hashOfConfig":"48"},{"size":613,"mtime":1611788040611,"results":"64","hashOfConfig":"48"},{"size":1935,"mtime":1612056905662,"results":"65","hashOfConfig":"48"},{"size":631,"mtime":1611814129407,"results":"66","hashOfConfig":"48"},{"size":1078,"mtime":1612132968044,"results":"67","hashOfConfig":"48"},{"size":5533,"mtime":1612056978756,"results":"68","hashOfConfig":"48"},{"size":235,"mtime":1611873755018,"results":"69","hashOfConfig":"48"},{"size":6812,"mtime":1611878277294,"results":"70","hashOfConfig":"48"},{"size":650,"mtime":1612129780465,"results":"71","hashOfConfig":"48"},{"size":8085,"mtime":1612056934419,"results":"72","hashOfConfig":"48"},{"size":3473,"mtime":1612057079834,"results":"73","hashOfConfig":"48"},{"size":3532,"mtime":1612057062796,"results":"74","hashOfConfig":"48"},{"size":1396,"mtime":1612052985207,"results":"75","hashOfConfig":"48"},{"size":1382,"mtime":1612053109691,"results":"76","hashOfConfig":"48"},{"size":1307,"mtime":1612132378693,"results":"77","hashOfConfig":"48"},{"size":989,"mtime":1612056785820,"results":"78","hashOfConfig":"48"},{"size":2968,"mtime":1612129556858,"results":"79","hashOfConfig":"48"},{"size":1824,"mtime":1612121184118,"results":"80","hashOfConfig":"48"},{"size":813,"mtime":1612121449840,"results":"81","hashOfConfig":"48"},{"size":767,"mtime":1612129899077,"results":"82","hashOfConfig":"48"},{"size":775,"mtime":1612129915505,"results":"83","hashOfConfig":"48"},{"size":1710,"mtime":1612124565457,"results":"84","hashOfConfig":"48"},{"size":1686,"mtime":1612132666283,"results":"85","hashOfConfig":"48"},{"size":1083,"mtime":1612218765195,"results":"86","hashOfConfig":"48"},{"size":3610,"mtime":1612220235861,"results":"87","hashOfConfig":"48"},{"size":1702,"mtime":1612220393876,"results":"88","hashOfConfig":"48"},{"size":2357,"mtime":1612219888700,"results":"89","hashOfConfig":"48"},{"size":982,"mtime":1612218861257,"results":"90","hashOfConfig":"48"},{"size":1182,"mtime":1612221257281,"results":"91","hashOfConfig":"48"},{"size":1021,"mtime":1612220635807,"results":"92","hashOfConfig":"48"},{"size":1371,"mtime":1612221443960,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"144dgfm",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"96"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"96"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"96"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"96"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"96"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"96"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"96"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"96"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"96"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"96"},"/Users/samtoll/Desktop/DeveloperConnect/client/src/index.js",[],["199","200"],"/Users/samtoll/Desktop/DeveloperConnect/client/src/App.js",[],"/Users/samtoll/Desktop/DeveloperConnect/client/src/components/layout/Navbar.js",[],"/Users/samtoll/Desktop/DeveloperConnect/client/src/components/layout/Landing.js",[],"/Users/samtoll/Desktop/DeveloperConnect/client/src/components/auth/Register.js",[],"/Users/samtoll/Desktop/DeveloperConnect/client/src/components/auth/Login.js",[],"/Users/samtoll/Desktop/DeveloperConnect/client/src/store.js",[],"/Users/samtoll/Desktop/DeveloperConnect/client/src/reducers/index.js",[],"/Users/samtoll/Desktop/DeveloperConnect/client/src/reducers/alert.js",["201"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\n\nconst initialState = [];\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_ALERT:\n      return [...state, payload];\n    case REMOVE_ALERT:\n      return state.filter((alert) => alert.id !== payload);\n    default:\n      return state;\n  }\n}\n","/Users/samtoll/Desktop/DeveloperConnect/client/src/actions/types.js",[],"/Users/samtoll/Desktop/DeveloperConnect/client/src/actions/alert.js",[],"/Users/samtoll/Desktop/DeveloperConnect/client/src/components/layout/alert.js",[],"/Users/samtoll/Desktop/DeveloperConnect/client/src/components/layout/Alert.js",[],"/Users/samtoll/Desktop/DeveloperConnect/client/src/actions/auth.js",[],"/Users/samtoll/Desktop/DeveloperConnect/client/src/reducers/auth.js",["202"],"import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  ACCOUNT_DELETED,\n} from '../actions/types';\n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  user: null,\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload,\n      };\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      localStorage.setItem('token', payload.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case REGISTER_FAIL:\n    case LOGIN_FAIL:\n    case AUTH_ERROR:\n    case LOGOUT:\n    case ACCOUNT_DELETED:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","/Users/samtoll/Desktop/DeveloperConnect/client/src/utils/setAuthToken.js",[],"/Users/samtoll/Desktop/DeveloperConnect/client/src/utils/api.js",[],"/Users/samtoll/Desktop/DeveloperConnect/client/src/components/dashboard/Dashboard.js",[],"/Users/samtoll/Desktop/DeveloperConnect/client/src/components/routing/PrivateRoute.js",[],"/Users/samtoll/Desktop/DeveloperConnect/client/src/reducers/profile.js",["203"],"import {\n  GET_PROFILE,\n  PROFILE_ERROR,\n  CLEAR_PROFILE,\n  UPDATE_PROFILE,\n  GET_PROFILES,\n  GET_REPOS,\n} from '../actions/types';\n\nconst initialState = {\n  profile: null,\n  profiles: [], // for list of developer page\n  repos: [], // repos we fetch from git\n  loading: true,\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_PROFILE:\n    case UPDATE_PROFILE:\n      return {\n        ...state,\n        profile: payload,\n        loading: false,\n      };\n    case GET_PROFILES:\n      return {\n        ...state,\n        profiles: payload,\n        loading: false,\n      };\n    case PROFILE_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n        profile: null,\n      };\n    case CLEAR_PROFILE:\n      return {\n        ...state,\n        profile: null,\n        repos: [],\n        loading: false,\n      };\n    case GET_REPOS:\n      return {\n        ...state,\n        repos: payload,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n",["204","205"],"/Users/samtoll/Desktop/DeveloperConnect/client/src/actions/profile.js",[],"/Users/samtoll/Desktop/DeveloperConnect/client/src/components/layout/Spinner.js",["206","207"],"import React, { Fragment } from 'react';\nimport spinner from './spinner.gif';\n\nexport default () => (\n  <Fragment>\n    <img\n      src={spinner}\n      style={{ width: '200px', margin: 'auto', display: 'block' }}\n    />\n  </Fragment>\n);\n","/Users/samtoll/Desktop/DeveloperConnect/client/src/components/profile-forms/CreateProfile.js",[],"/Users/samtoll/Desktop/DeveloperConnect/client/src/components/dashboard/DashboardActions.js",[],"/Users/samtoll/Desktop/DeveloperConnect/client/src/components/profile-forms/EditProfile.js",["208"],"import React, { Fragment, useState, useEffect } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\n\nconst EditProfile = ({\n  profile: { profile, loading },\n  createProfile,\n  getCurrentProfile,\n  history,\n}) => {\n  const [formData, setFormData] = useState({\n    company: '',\n    website: '',\n    location: '',\n    status: '',\n    skills: '',\n    githubusername: '',\n    bio: '',\n    twitter: '',\n    facebook: '',\n    linkedin: '',\n    youtube: '',\n    instagram: '',\n  });\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  useEffect(() => {\n    getCurrentProfile();\n\n    setFormData({\n      company: loading || !profile.company ? '' : profile.company,\n      website: loading || !profile.website ? '' : profile.website,\n      location: loading || !profile.location ? '' : profile.location,\n      status: loading || !profile.status ? '' : profile.status,\n      skills: loading || !profile.skills ? '' : profile.skills,\n      githubusername:\n        loading || !profile.githubusername ? '' : profile.githubusername,\n      bio: loading || !profile.bio ? '' : profile.bio,\n      twitter: loading || !profile.social ? '' : profile.social.twitter,\n      facebook: loading || !profile.social ? '' : profile.social.facebook,\n      linkedin: loading || !profile.linkedin ? '' : profile.social.linkedin,\n      youtube: loading || !profile.youtube ? '' : profile.social.youtube,\n      instagram: loading || !profile.instagram ? '' : profile.social.instagram,\n    });\n  }, [loading, getCurrentProfile]); // prop it depends on\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram,\n  } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    createProfile(formData, history, true);\n  };\n\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">Create Your Profile</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\n        <div className=\"form-group\">\n          <select name=\"status\" value={status} onChange={(e) => onChange(e)}>\n            <option value=\"0\">* Select Professional Status</option>\n            <option value=\"Developer\">Developer</option>\n            <option value=\"Junior Developer\">Junior Developer</option>\n            <option value=\"Senior Developer\">Senior Developer</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Student or Learning\">Student or Learning</option>\n            <option value=\"Instructor\">Instructor or Teacher</option>\n            <option value=\"Intern\">Intern</option>\n            <option value=\"Other\">Other</option>\n          </select>\n          <small className=\"form-text\">\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Company\"\n            name=\"company\"\n            value={company}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            Could be your own company or one you work for\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Website\"\n            name=\"website\"\n            value={website}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Location\"\n            name=\"location\"\n            value={location}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            City & state suggested (eg. Boston, MA)\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"* Skills\"\n            name=\"skills\"\n            value={skills}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            placeholder=\"Github Username\"\n            name=\"githubusername\"\n            value={githubusername}\n            onChange={(e) => onChange(e)}\n          />\n          <small className=\"form-text\">\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <textarea\n            placeholder=\"A short bio of yourself\"\n            name=\"bio\"\n            value={bio}\n            onChange={(e) => onChange(e)}\n          ></textarea>\n          <small className=\"form-text\">Tell us a little about yourself</small>\n        </div>\n\n        <div className=\"my-2\">\n          <button\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\n            type=\"button\"\n            className=\"btn btn-light\"\n          >\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <Fragment>\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-twitter fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Twitter URL\"\n                name=\"twitter\"\n                value={twitter}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-facebook fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Facebook URL\"\n                name=\"facebook\"\n                value={facebook}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-youtube fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"YouTube URL\"\n                name=\"youtube\"\n                value={youtube}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-linkedin fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Linkedin URL\"\n                name=\"linkedin\"\n                value={linkedin}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n\n            <div className=\"form-group social-input\">\n              <i className=\"fab fa-instagram fa-2x\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Instagram URL\"\n                name=\"instagram\"\n                value={instagram}\n                onChange={(e) => onChange(e)}\n              />\n            </div>\n          </Fragment>\n        )}\n\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nEditProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\n  withRouter(EditProfile)\n);\n","/Users/samtoll/Desktop/DeveloperConnect/client/src/components/profile-forms/AddExperience.js",[],"/Users/samtoll/Desktop/DeveloperConnect/client/src/components/profile-forms/AddEducation.js",[],"/Users/samtoll/Desktop/DeveloperConnect/client/src/components/dashboard/Experience.js",[],"/Users/samtoll/Desktop/DeveloperConnect/client/src/components/dashboard/Education.js",[],"/Users/samtoll/Desktop/DeveloperConnect/client/src/components/profiles/Profiles.js",[],"/Users/samtoll/Desktop/DeveloperConnect/client/src/components/profiles/ProfileItem.js",[],"/Users/samtoll/Desktop/DeveloperConnect/client/src/components/profile/Profile.js",[],"/Users/samtoll/Desktop/DeveloperConnect/client/src/components/profile/ProfileTop.js",["209"],"import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ProfileTop = ({\n  profile: {\n    status,\n    company,\n    location,\n    website,\n    social,\n    user: { name, avatar },\n  },\n}) => {\n  return (\n    <div className=\"profile-top bg-primary p-2\">\n      <img className=\"round-img my-1\" src={avatar} alt=\"\" />\n      <h1 className=\"large\">{name}</h1>\n      <p className=\"lead\">\n        {status} {company && <span> at {company} </span>}\n      </p>\n      <p>{location && <span>{location}</span>}</p>\n      <div className=\"icons my-1\">\n        {website && (\n          <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className=\"fas fa-globe fa-2x\"></i>\n          </a>\n        )}\n        {social && social.twitter && (\n          <a href={social.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className=\"fab fa-twitter fa-2x\"></i>\n          </a>\n        )}\n        {social && social.facebook && (\n          <a href={social.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className=\"fab fa-facebook fa-2x\"></i>\n          </a>\n        )}\n        {social && social.linkedin && (\n          <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className=\"fab fa-linkedin fa-2x\"></i>\n          </a>\n        )}\n        {social && social.youtube && (\n          <a href={social.youtube} target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className=\"fab fa-youtube fa-2x\"></i>\n          </a>\n        )}\n        {social && social.instagram && (\n          <a href={social.instagram} target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className=\"fab fa-instagram fa-2x\"></i>\n          </a>\n        )}\n      </div>\n    </div>\n  );\n};\n\nProfileTop.propTypes = {\n  profile: PropTypes.object.isRequired,\n};\n\nexport default ProfileTop;\n","/Users/samtoll/Desktop/DeveloperConnect/client/src/components/profile/ProfileAbout.js",[],"/Users/samtoll/Desktop/DeveloperConnect/client/src/components/profile/ProfileExperience.js",[],"/Users/samtoll/Desktop/DeveloperConnect/client/src/components/profile/ProfileEducation.js",[],"/Users/samtoll/Desktop/DeveloperConnect/client/src/components/profile/ProfileGitHub.js",["210","211"],"/Users/samtoll/Desktop/DeveloperConnect/client/src/components/profile/ProfileGithub.js",["212"],"import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getGithubRepos } from '../../actions/profile';\n\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\n  useEffect(() => {\n    getGithubRepos(username);\n  }, []);\n\n  return (\n    <div className=\"profile-github\">\n      <h2 className=\"text-primary my-1\">Github Repos</h2>\n      {repos === null ? (\n        <Spinner />\n      ) : (\n        repos.map((repo) => (\n          <div key={repo._id} className=\"repo bg-white p-1 my-1\">\n            <div>\n              <h4>\n                <a\n                  href={repo.html_url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  {repo.name}\n                </a>\n              </h4>\n              <p>{repo.description}</p>\n            </div>\n            <div>\n              <ul>\n                <li className=\"badge badge-primary\">\n                  Stars: {repo.stargazers_count}\n                </li>\n                <li className=\"badge badge-dark\">\n                  Watchers: {repo.watchers_count}\n                </li>\n                <li className=\"badge badge-light\">Forks: {repo.forks_count}</li>\n              </ul>\n            </div>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nProfileGithub.propTypes = {\n  getGitHubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  repos: state.profile.repos,\n});\n\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\n","/Users/samtoll/Desktop/DeveloperConnect/client/src/components/posts/Posts.js",[],"/Users/samtoll/Desktop/DeveloperConnect/client/src/actions/post.js",["213","214"],"import acios from 'axios';\nimport { setAlert } from './alert';\nimport {\n  GET_POSTS,\n  GET_POST,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT,\n} from './types';\nimport axios from 'axios';\n\n// Get Posts\nexport const getPosts = () => async (dispatch) => {\n  try {\n    const res = await axios.get('/api/posts');\n\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add like\nexport const addLike = (id) => async (dispatch) => {\n  try {\n    const res = await axios.put(`/api/posts/like/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { id, likes: res.data },\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Remove like\nexport const removeLike = (id) => async (dispatch) => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { id, likes: res.data },\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Delete post\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await axios.delete(`/api/posts/${id}`);\n\n    dispatch({\n      type: DELETE_POST,\n      payload: id,\n    });\n\n    dispatch(setAlert('Post Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add post\nexport const addPost = (formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  try {\n    const res = await axios.post('/api/posts', formData, config);\n\n    dispatch({\n      type: ADD_POST,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Post Created', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Get Post\nexport const getPost = (id) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/posts/${id}`);\n\n    dispatch({\n      type: GET_POST,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add comment\nexport const addComment = (postId, formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  try {\n    const res = await axios.post(\n      `/api/posts/comment/${postId}`,\n      formData,\n      config\n    );\n\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Comment Added', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Delete comment\nexport const deleteComment = (postId, commentId) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\n\n    dispatch({\n      type: REMOVE_COMMENT,\n      payload: commentId,\n    });\n\n    dispatch(setAlert('Comment Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n","/Users/samtoll/Desktop/DeveloperConnect/client/src/reducers/post.js",["215","216"],"import {\n  GET_POSTS,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_POST,\n  GET_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT,\n} from '../actions/types';\nimport { defineLocale } from 'moment';\n\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: payload,\n        loading: false,\n      };\n    case GET_POST:\n      return {\n        ...state,\n        post: payload,\n        loading: false,\n      };\n    case ADD_POST:\n      return {\n        ...state,\n        posts: [payload, ...state.posts],\n        loading: false,\n      };\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter((post) => post._id !== payload), // returning all posts besides one that got deleted\n        loading: false,\n      };\n    case POST_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      };\n    case UPDATE_LIKES:\n      return {\n        ...state,\n        posts: state.posts.map((post) =>\n          post._id === payload.id ? { ...post, likes: payload.likes } : post\n        ),\n        loading: false,\n      };\n    case ADD_COMMENT:\n      return {\n        ...state,\n        post: { ...state.post, comments: payload },\n        loading: false,\n      };\n    case REMOVE_COMMENT:\n      return {\n        ...state,\n        post: {\n          ...state.post,\n          comments: state.post.comments.filter(\n            (comment) => comment._id !== payload\n          ),\n          loading: false,\n        },\n      };\n    default:\n      return state;\n  }\n}\n","/Users/samtoll/Desktop/DeveloperConnect/client/src/components/posts/PostItem.js",[],"/Users/samtoll/Desktop/DeveloperConnect/client/src/components/posts/PostForm.js",[],"/Users/samtoll/Desktop/DeveloperConnect/client/src/components/post/Post.js",["217"],"import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport PostItem from '../posts/PostItem';\nimport CommentForm from './CommentForm';\nimport CommentItem from './CommentItem';\nimport { getPost } from '../../actions/post';\n\nconst Post = ({ getPost, post: { post, loading }, match }) => {\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost]);\n\n  return loading || post === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <Link to=\"posts\" className=\"btn\">\n        Back To Posts\n      </Link>\n      <PostItem post={post} showActions={false} />\n      <CommentForm postId={post._id} />\n      <div className=\"comments\">\n        {post.comments.map((comment) => (\n          <CommentItem key={comment._id} comment={comment} postId={post._id} />\n        ))}\n      </div>\n    </Fragment>\n  );\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  post: state.post,\n});\n\nexport default connect(mapStateToProps, { getPost })(Post);\n","/Users/samtoll/Desktop/DeveloperConnect/client/src/components/post/CommentForm.js",[],"/Users/samtoll/Desktop/DeveloperConnect/client/src/components/post/CommentItem.js",["218"],"import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Moment from 'react-moment';\nimport { deleteComment } from '../../actions/post';\n\nconst CommentItem = ({\n  postId,\n  comment: { _id, text, name, avatar, user, date },\n  auth,\n  deleteComment,\n}) => {\n  return (\n    <div class=\"post bg-white p-1 my-1\">\n      <div>\n        <Link to={`/profile/${user}`}>\n          <img class=\"round-img\" src={avatar} alt=\"\" />\n          <h4>{name}</h4>\n        </Link>\n      </div>\n      <div>\n        <p class=\"my-1\">{text}</p>\n        <p class=\"post-date\">\n          Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment>\n        </p>\n        {!auth.loading && user === auth.user._id && (\n          <button\n            onClick={(e) => deleteComment(postId, _id)}\n            type=\"button\"\n            className=\"btn btn-danger\"\n          >\n            <i className=\"fas fa-times\"></i>\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nCommentItem.propTypes = {\n  postId: PropTypes.number.isRequired,\n  comment: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  deleteComment: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\n",{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","severity":1,"message":"224","line":5,"column":1,"nodeType":"225","endLine":16,"endColumn":2},{"ruleId":"223","severity":1,"message":"224","line":19,"column":1,"nodeType":"225","endLine":53,"endColumn":2},{"ruleId":"223","severity":1,"message":"224","line":18,"column":1,"nodeType":"225","endLine":58,"endColumn":2},{"ruleId":"219","replacedBy":"226"},{"ruleId":"221","replacedBy":"227"},{"ruleId":"223","severity":1,"message":"228","line":4,"column":1,"nodeType":"225","endLine":11,"endColumn":3},{"ruleId":"229","severity":1,"message":"230","line":6,"column":5,"nodeType":"231","endLine":9,"endColumn":7},{"ruleId":"232","severity":1,"message":"233","line":48,"column":6,"nodeType":"234","endLine":48,"endColumn":34,"suggestions":"235"},{"ruleId":"236","severity":1,"message":"237","line":39,"column":11,"nodeType":"231","endLine":39,"endColumn":65},{"ruleId":"238","severity":1,"message":"239","line":1,"column":17,"nodeType":"240","messageId":"241","endLine":1,"endColumn":26},{"ruleId":"238","severity":1,"message":"242","line":4,"column":8,"nodeType":"240","messageId":"241","endLine":4,"endColumn":15},{"ruleId":"232","severity":1,"message":"243","line":10,"column":6,"nodeType":"234","endLine":10,"endColumn":8,"suggestions":"244"},{"ruleId":"238","severity":1,"message":"245","line":1,"column":8,"nodeType":"240","messageId":"241","endLine":1,"endColumn":13},{"ruleId":"238","severity":1,"message":"246","line":159,"column":11,"nodeType":"240","messageId":"241","endLine":159,"endColumn":14},{"ruleId":"238","severity":1,"message":"247","line":11,"column":10,"nodeType":"240","messageId":"241","endLine":11,"endColumn":22},{"ruleId":"223","severity":1,"message":"224","line":20,"column":1,"nodeType":"225","endLine":82,"endColumn":2},{"ruleId":"232","severity":1,"message":"248","line":14,"column":6,"nodeType":"234","endLine":14,"endColumn":15,"suggestions":"249"},{"ruleId":"238","severity":1,"message":"250","line":1,"column":17,"nodeType":"240","messageId":"241","endLine":1,"endColumn":25},"no-native-reassign",["251"],"no-negated-in-lhs",["252"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["251"],["252"],"Assign arrow function to a variable before exporting as module default","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.instagram', 'profile.linkedin', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', 'profile.website', and 'profile.youtube'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'profile.company', you can also switch to useReducer instead of useState and read 'profile.company' in the reducer.","ArrayExpression",["253"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Spinner' is defined but never used.","React Hook useEffect has missing dependencies: 'getGithubRepos' and 'username'. Either include them or remove the dependency array. If 'getGithubRepos' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["254"],"'acios' is defined but never used.","'res' is assigned a value but never used.","'defineLocale' is defined but never used.","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["255"],"'Fragment' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},"Update the dependencies array to be: [loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.social, profile.linkedin, profile.youtube, profile.instagram]",{"range":"262","text":"263"},"Update the dependencies array to be: [getGithubRepos, username]",{"range":"264","text":"265"},"Update the dependencies array to be: [getPost, match.params.id]",{"range":"266","text":"267"},[1649,1677],"[loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.social, profile.linkedin, profile.youtube, profile.instagram]",[335,337],"[getGithubRepos, username]",[499,508],"[getPost, match.params.id]"]